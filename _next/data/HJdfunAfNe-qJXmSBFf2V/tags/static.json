{"pageProps":{"tag":"static","total":2,"posts":[{"title":"PHP 面向对象编程和设计模式 (3/5) - 单例模式和工厂模式","author":"高国良","type":"posts","series":false,"date":1402483200791,"tags":["php","static","self"],"description":"设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的；设计模式使代码编制真正工...","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-3-singleton-and-factory","slug":"2014/php-oop-and-design-pattern-3-singleton-and-factory"},{"title":"PHP 面向对象编程和设计模式 (2/5) - 静态变量、属性和方法及延迟绑定","author":"高国良","type":"posts","series":false,"date":1402360080791,"tags":["php","static","self","this"],"description":"当希望指向最终的实现功能的类时，就可以使用 static，这个限定符会在代码执行之前立即计算出继承层次结构上最后那个类的成员。这一过程被称作延迟绑定。","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-2-static-variables-properties-methods-and-delayed-binding","slug":"2014/php-oop-and-design-pattern-2-static-variables-properties-methods-and-delayed-binding"}]},"__N_SSG":true}