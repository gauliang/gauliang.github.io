{"pageProps":{"id":["posts","2019","install-istio-1.2.4-based-on-the-k8s-cluster"],"post":{"id":["posts","2019","install-istio-1.2.4-based-on-the-k8s-cluster"],"contentHtml":"<div class=\"image-widget\"><img src=\"/attachments/posts/2019/install-istio-1.2.4-based-on-the-k8s-cluster.files/https://img2018.cnblogs.com/blog/634103/201908/634103-20190830084324046-130039261.png\" alt=\"\"></div>\n<p>使用云平台可以为组织提供丰富的好处。然而，不可否认的是，采用云可能会给 DevOps 团队带来压力。开发人员必须使用微服务以满足应用的可移植性，同时运营商管理了极其庞大的混合和多云部署。Istio 允许您连接、保护、控制和观测服务。</p>\n<p>在较高的层次上，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。它是一个完全开源的服务网格，可以透明地分层到现有的分布式应用程序上。它也是一个平台，包括允许它集成到任何日志记录平台、遥测或策略系统的 API。Istio 的多样化功能集使您能够成功高效地运行分布式微服务架构，并提供保护、连接和监控微服务的统一方法。</p>\n<h2 id=\"hash-一、安装\">一、安装</h2>\n<h3 id=\"hash-1-1-安装-helm\">1.1 安装 helm</h3>\n<ol>\n<li>下载二进制可执行文件，<a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://github.com/helm/helm/releases\">helm-releases</a></li>\n<li>解压压缩包 <code>tar -zxvf helm-v2.0.0-linux-amd64.tgz</code></li>\n<li>找到 helm 文件，移动至 PATH 路径上，<code>mv linux-amd64/helm /usr/local/bin/helm</code></li>\n</ol>\n<h3 id=\"hash-1-2-安装-istio\">1.2 安装 istio</h3>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 下载软件包并解压</span>\n$ <span class=\"token function\">curl</span> -L https://git.io/getLatestIstio <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">ISTIO_VERSION</span><span class=\"token operator\">=</span><span class=\"token number\">1.2</span>.4 <span class=\"token function\">sh</span> -\n\n<span class=\"token comment\"># 进入文件夹</span>\n<span class=\"token builtin class-name\">cd</span> istio-1.2.4\n\n<span class=\"token comment\"># 添加 istioctl 路径到环境变量 PATH，或将其移动至 /usr/local/bin 下</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> bin/istioctl /usr/local/bin\n\n<span class=\"token comment\"># 创建命名空间</span>\nkubectl create namespace istio-system\n\n<span class=\"token comment\"># 使用 kubectl apply 安装所有的 Istio CRD</span>\nhelm template install/kubernetes/helm/istio-init --name istio-init --namespace istio-system <span class=\"token operator\">|</span> kubectl apply -f -\n\n<span class=\"token comment\"># 根据实际情况配置更新 values.yaml</span>\n<span class=\"token function\">vi</span> install/kubernetes/helm/istio/values.yaml\n\n<span class=\"token comment\"># 部署 Istio 的核心组件</span>\nhelm template install/kubernetes/helm/istio --name istio --namespace istio-system <span class=\"token operator\">|</span> kubectl apply -f -\n</code></pre></div>\n<h3 id=\"hash-1-2-验证安装\">1.2 验证安装</h3>\n<p>1、确保 istioctl 可正常工作</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">istioctl version\n\n<span class=\"token comment\"># 输出如下：</span>\nclient version: <span class=\"token number\">1.2</span>.4\ncitadel version: <span class=\"token number\">1.2</span>.4\negressgateway version: 94746ccd404a8e056483dd02e4e478097b950da6-dirty\ngalley version: <span class=\"token number\">1.2</span>.4\ningressgateway version: 94746ccd404a8e056483dd02e4e478097b950da6-dirty\npilot version: <span class=\"token number\">1.2</span>.4\npolicy version: <span class=\"token number\">1.2</span>.4\nsidecar-injector version: <span class=\"token number\">1.2</span>.4\ntelemetry version: <span class=\"token number\">1.2</span>.4\n</code></pre></div>\n<p>2、确保所有 k8s 服务都已以部署并都分配到集群 ip 地址（jaeger-agent) 除外</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get svc -n istio-system\n</code></pre></div>\n<p>结果如下</p>\n<div class=\"table-responsive\"><table>\n<thead>\n<tr>\n<th>NAME</th>\n<th>TYPE</th>\n<th>CLUSTER-IP</th>\n<th>EXTERNAL-IP</th>\n<th>PORT(S)</th>\n<th>AGE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>istio-citadel</td>\n<td>ClusterIP</td>\n<td>10.101.78.177</td>\n<td><code>&#x3C;none></code></td>\n<td>8060/TCP,15014/TCP</td>\n<td>2m28s</td>\n</tr>\n<tr>\n<td>istio-galley</td>\n<td>ClusterIP</td>\n<td>10.100.76.11</td>\n<td><code>&#x3C;none></code></td>\n<td>443/TCP,15014/TCP,9901/TCP</td>\n<td>2m29s</td>\n</tr>\n<tr>\n<td>istio-ingressgateway</td>\n<td>LoadBalancer</td>\n<td>10.106.32.13</td>\n<td><code>&#x3C;pending></code></td>\n<td>15020:31401/TCP,80:31380/TCP,443:31390/TCP,31400:31400/TCP,15029:31717/TCP,15030:30028/TCP,15031:31428/TCP,15032:30956/TCP,15443:30614/TCP</td>\n<td>2m29s</td>\n</tr>\n<tr>\n<td>istio-pilot</td>\n<td>ClusterIP</td>\n<td>10.97.35.129</td>\n<td><code>&#x3C;none></code></td>\n<td>15010/TCP,15011/TCP,8080/TCP,15014/TCP</td>\n<td>2m28s</td>\n</tr>\n<tr>\n<td>istio-policy</td>\n<td>ClusterIP</td>\n<td>10.99.93.221</td>\n<td><code>&#x3C;none></code></td>\n<td>9091/TCP,15004/TCP,15014/TCP</td>\n<td>2m29s</td>\n</tr>\n<tr>\n<td>istio-sidecar-injector</td>\n<td>ClusterIP</td>\n<td>10.107.243.186</td>\n<td><code>&#x3C;none></code></td>\n<td>443/TCP</td>\n<td>2m28s</td>\n</tr>\n<tr>\n<td>istio-telemetry</td>\n<td>ClusterIP</td>\n<td>10.96.117.90</td>\n<td><code>&#x3C;none></code></td>\n<td>9091/TCP,15004/TCP,15014/TCP,42422/TCP</td>\n<td>2m29s</td>\n</tr>\n<tr>\n<td>prometheus</td>\n<td>ClusterIP</td>\n<td>10.96.219.44</td>\n<td><code>&#x3C;none></code></td>\n<td>9090/TCP</td>\n<td>2m28s</td>\n</tr>\n</tbody>\n</table></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">\r\n3、 确保相关 k8s pod 都已部署，且状态为 running\r\n\r\n```bash\r\nkubectl get pods -n istio-system</code></pre></div>\n<p>结果如下</p>\n<div class=\"table-responsive\"><table>\n<thead>\n<tr>\n<th>NAME</th>\n<th>READY</th>\n<th>STATUS</th>\n<th>RESTARTS</th>\n<th>AGE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>istio-citadel-7fff5797f-fckss</td>\n<td>1/1</td>\n<td>Running</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-cleanup-secrets-1.2.4-hz2rm</td>\n<td>0/1</td>\n<td>Completed</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-galley-74d4d7b4db-wnjds</td>\n<td>1/1</td>\n<td>Running</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-ingressgateway-686854b899-g4z9k</td>\n<td>1/1</td>\n<td>Running</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-init-crd-10-hhll9</td>\n<td>0/1</td>\n<td>Completed</td>\n<td>0</td>\n<td>30m</td>\n</tr>\n<tr>\n<td>istio-init-crd-11-ktb9j</td>\n<td>0/1</td>\n<td>Completed</td>\n<td>0</td>\n<td>30m</td>\n</tr>\n<tr>\n<td>istio-init-crd-12-vrrr2</td>\n<td>0/1</td>\n<td>Completed</td>\n<td>0</td>\n<td>30m</td>\n</tr>\n<tr>\n<td>istio-pilot-7fdcbd6f55-rw9bm</td>\n<td>2/2</td>\n<td>Running</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-policy-79f647bb6-4fntc</td>\n<td>2/2</td>\n<td>Running</td>\n<td>3</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-security-post-install-1.2.4-lr4nk</td>\n<td>0/1</td>\n<td>Completed</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-sidecar-injector-578bfd76d7-gtsdb</td>\n<td>1/1</td>\n<td>Running</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>istio-telemetry-cb4486d94-j9gqf</td>\n<td>2/2</td>\n<td>Running</td>\n<td>4</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>prometheus-7d7b9f7844-kgtjn</td>\n<td>1/1</td>\n<td>Running</td>\n<td>0</td>\n<td>16m</td>\n</tr>\n</tbody>\n</table></div>\n<h2 id=\"hash-二、-部署应用\">二、 部署应用</h2>\n<p>以官方 Bookinfo Application 为例，它由四个单独的微服务构成。这个应用模仿在线书店的一个分类，显示一本书的信息。</p>\n<h3 id=\"hash-2-1-Bookinfo-Application-概述\">2.1 Bookinfo Application 概述</h3>\n<p>Bookinfo 应用分为四个单独的微服务：</p>\n<ol>\n<li><strong>productpage</strong> ：productpage 微服务会调用 details 和 reviews 两个微服务，用来生成页面。</li>\n<li><strong>details</strong> ：这个微服务包含了书籍的信息。</li>\n<li><strong>reviews</strong> ：这个微服务包含了书籍相关的评论。它还会调用 ratings 微服务。</li>\n<li><strong>ratings</strong> ：ratings 微服务中包含了由书籍评价组成的评级信息。</li>\n</ol>\n<p>reviews 服务有3个版本</p>\n<ol>\n<li>v1 版本不会调用 ratings 服务。</li>\n<li>v2 版本会调用 ratings 服务，并使用 1 到 5 个黑色星形图标来显示评分信息。</li>\n<li>v3 版本会调用 ratings 服务，并使用 1 到 5 个红色星形图标来显示评分信息。</li>\n</ol>\n<p>Istio 注入之前的 Bookinfo 应用拓扑结构如下：</p>\n<div class=\"image-widget\"><img src=\"/attachments/posts/2019/install-istio-1.2.4-based-on-the-k8s-cluster.files/https://istio.io/docs/examples/bookinfo/noistio.svg\" alt=\"\"></div>\n<p>Bookinfo 由多个微服务组成，各自用不同的语言编写。这些服务对 Istio 并无依赖，但是构成了一个有代表性的服务网格的例子：它由多个服务、多个语言构成，并且 reviews 服务具有多个版本。</p>\n<h3 id=\"hash-2-2-部署-Bookinfo-Application\">2.2 部署 Bookinfo Application</h3>\n<p>要在 Istio 中运行这一应用，无需对应用自身做出任何改变。我们只要简单的在 Istio 环境中对服务进行配置和运行，具体一点说就是把 Envoy sidecar 注入到每个服务之中。这个过程所需的具体命令和配置方法由运行时环境决定，而部署结果较为一致，如下图所示：</p>\n<div class=\"image-widget\"><img src=\"/attachments/posts/2019/install-istio-1.2.4-based-on-the-k8s-cluster.files/https://istio.io/docs/examples/bookinfo/withistio.svg\" alt=\"\"></div>\n<p>所有的微服务都和 Envoy sidecar 集成在一起，被集成服务所有的出入流量都被 sidecar 所劫持，这样就为外部控制准备了所需的 Hook，然后就可以利用 Istio 控制平面为应用提供服务路由、遥测数据收集以及策略实施等功能。</p>\n<p>1、 创建命名空间用以部署 Bookinfo Application</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建命名空间</span>\nkubectl create ns bookinfo-application\n</code></pre></div>\n<p>2、 为这个命名空间大上 <code>istio-injection=enabled</code> 标签</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl label namespace bookinfo-application istio-injection<span class=\"token operator\">=</span>enabled\n</code></pre></div>\n<p>3、 部署 bookinfo application</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -n bookinfo-application\n</code></pre></div>\n<p>安装过程时长视网速而定，请耐心等待以下。</p>\n<p>4、确认所有的服务和 Pod 都已经正确的定义和启动</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get services -n bookinfo-application\nNAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>    AGE\ndetails       ClusterIP   <span class=\"token number\">10.102</span>.215.67    <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&#x3C;</span>none<span class=\"token operator\">></span><span class=\"token variable\">`</span></span>        <span class=\"token number\">9080</span>/TCP   2m58s\nproductpage   ClusterIP   <span class=\"token number\">10.109</span>.215.4     <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&#x3C;</span>none<span class=\"token operator\">></span><span class=\"token variable\">`</span></span>        <span class=\"token number\">9080</span>/TCP   2m57s\nratings       ClusterIP   <span class=\"token number\">10.107</span>.143.194   <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&#x3C;</span>none<span class=\"token operator\">></span><span class=\"token variable\">`</span></span>        <span class=\"token number\">9080</span>/TCP   2m58s\nreviews       ClusterIP   <span class=\"token number\">10.96</span>.249.233    <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&#x3C;</span>none<span class=\"token operator\">></span><span class=\"token variable\">`</span></span>        <span class=\"token number\">9080</span>/TCP   2m57s\n\n<span class=\"token comment\">#---</span>\n\n$ kubectl get pods -n bookinfo-application\nNAME                              READY   STATUS    RESTARTS   AGE\ndetails-v1-74f858558f-p8nwz       <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          4m24s\nproductpage-v1-8554d58bff-cgx74   <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          4m24s\nratings-v1-7855f5bcb9-tt5zn       <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          4m24s\nreviews-v1-59fd8b965b-jvqvs       <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          4m24s\nreviews-v2-d6cfdb7d6-zxk9w        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          4m24s\nreviews-v3-75699b5cfb-28dvd       <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          4m24s\n</code></pre></div>\n<p>要确认 Bookinfo 应用程序正在运行，请通过某个 pod 中的 curl 命令向其发送请求，例如来自 ratings：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> -it ratings-v1-7855f5bcb9-tt5zn -n bookinfo-application -c ratings  -- <span class=\"token function\">curl</span> productpage:9080/productpage <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"&#x3C;title>.*&#x3C;/title>\"</span>\n</code></pre></div>\n<h3 id=\"hash-2-3-暴露服务入口\">2.3 暴露服务入口</h3>\n<p>如果没有外部负载均衡可以将名为 <code>istio-ingressgateway</code> 的 service 类型修改为 NodePort 类型，随后通过 <code>istio-ingressgateway</code> 所在的服务器IP地址+端口的形式访问服务。</p>\n<p>istio 的 Gateway 允许外部流量进入 Istio 服务网，与 K8S 的 ingress 直接指定路由不同，istio 的路由规则不在 gateway 中指定，需要通过 VirtualService 单独配置。执行下面命令创建 gateway 和 virtualservice。</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml -n bookinfo-application\n</code></pre></div>\n<h3 id=\"hash-2-4-浏览器访问-Bookinfo-Application\">2.4 浏览器访问 Bookinfo Application</h3>\n<p>可以在浏览器打开 <code>http://NodeIp:NodePort/productpage</code>以浏览  Bookinfo Application 页面，如果刷新几次应用的页面，就会看到 productpage 页面中会随机展示 reviews 服务的不同版本的效果（红色��黑色的星形或者没有显示）。reviews 服务出现这种情况是因为我们还没有使用 Istio 来控制版本的路由。</p>\n<h2 id=\"hash-三、应用缺省目标规则\">三、应用缺省目标规则</h2>\n<p>在使用 Istio 控制 Bookinfo 版本路由之前，你需要在目标规则中定义好可用的版本，命名为 subsets 。</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply -n bookinfo-application -f samples/bookinfo/networking/destination-rule-all.yaml\n</code></pre></div>\n<p>部署完成后可以通过以命令检查详情</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get destinationrules -A\nNAMESPACE              NAME              HOST                                             AGE\nbookinfo-application   details           details                                          2m54s\nbookinfo-application   productpage       productpage                                      2m54s\nbookinfo-application   ratings           ratings                                          2m54s\nbookinfo-application   reviews           reviews                                          2m54s\n</code></pre></div>\n<p>可以看到我们成功创建了 4 个 destinationrule</p>\n<p>更多有关流量管理的信息，可以查阅文档 <a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://istio.io/\">https://istio.io/</a></p>\n<h2 id=\"hash-四、应用性能监控\">四、应用性能监控</h2>\n<p>istio 默认自带相关监控组件（如：kiali）版本相对可能会稍有滞后，如果要安装最新版可以在安装时前配置不安装相关组建，待istio 安装完成后在单独安装监控组建。</p>\n","words":6302,"toc":[{"depth":2,"value":"一、安装","id":"hash-一、安装"},{"depth":2,"value":"二、 部署应用","id":"hash-二、-部署应用"},{"depth":2,"value":"三、应用缺省目标规则","id":"hash-三、应用缺省目标规则"},{"depth":2,"value":"四、应用性能监控","id":"hash-四、应用性能监控"}],"title":"基于 K8S 集群安装部署 istio-1.2.4","author":"高国良","type":"posts","series":false,"date":"2019-08-31T16:45:00.791Z","tags":[],"description":"<img src=\"https__ERR__//img2018.cnblogs.com/blog/634103/201908/634103-20190830084324046-130039261.png\" class=\"desc_img\">","draft":false,"cover":false},"prev":{"title":"Gitlab 重置 root 密码","author":"高国良","type":"posts","series":false,"date":1562832420791,"tags":[],"description":"<img src=\"https__ERR__//img2018.cnblogs.com/blog/634103/201908/634103-20190812005008821-76726312.png\" class=\"desc_img\">","draft":false,"cover":false,"path":"/blogs/2019/reset-the-gitlab-root-password","slug":"2019/reset-the-gitlab-root-password"},"next":{"title":"Ubuntu 19.04 常见操作指南","author":"高国良","type":"posts","series":false,"date":1567771440791,"tags":[],"description":"<img src=\"https__ERR__//img2018.cnblogs.com/blog/634103/201909/634103-20190908182418386-695298629.jpg\" class=\"desc_img\">","draft":false,"cover":false,"path":"/blogs/2019/ubuntu-handbook","slug":"2019/ubuntu-handbook"}},"__N_SSG":true}