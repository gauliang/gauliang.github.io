{"pageProps":{"id":["posts","2022","deep-dive-react-fiber"],"post":{"id":["posts","2022","deep-dive-react-fiber"],"contentHtml":"<p>英文原文：<a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://blog.logrocket.com/deep-dive-react-fiber/\">https://blog.logrocket.com/deep-dive-react-fiber/</a></p>\n<blockquote>\n<p>编者注： 这篇文章于 2022 年 3 月 14 日更新，删除了所有过时的信息并添加了什么是 React Fiber？部分。</p>\n</blockquote>\n<p>有没有想过当你调用 <code>ReactDOM.render(&#x3C;App />, document.getElementById('root'))</code> 时会发生什么？</p>\n<p>我们知道 ReactDOM 在底层构建 DOM 树并将应用程序呈现在屏幕上。\n但是 React 是如何构建 DOM 树的呢？当应用程序的状态发生变化时，它如何更新树？</p>\n<p>在这篇文章中，我们将了解 React Fiber 是什么，\n以及 React 如何在 React v15.0.0 之前构建 DOM 树，该模型的缺陷，\n以及从 React v16.0.0 到当前版本的新模型如何解决这些问题。</p>\n<p>这篇文章将涵盖广泛的概念，这些概念纯粹是内部实现细节，对于使用 React 进行实际前端开发并不是绝对必要的。</p>\n<h2 id=\"hash-React-Fiber-是什么\">React Fiber 是什么</h2>\n","words":420,"toc":[{"depth":2,"value":"React Fiber 是什么","id":"hash-React-Fiber-是什么"}],"title":"深入了解 React Fiber","author":"GauLiang","type":"posts","series":false,"date":"2022-07-03T10:53:37.480Z","tags":[],"description":"description","draft":true,"cover":false},"prev":{"title":"Javascript 手写 LRU 算法","author":"GauLiang","type":"posts","series":false,"date":1663685743412,"tags":["lru"],"description":"LRU 是 Least Recently Used 的缩写，即最近最少使用。作为一种经典的缓存策略，它的基本思想是长期不被使用的数据，在未来被用到的几率也不大，所以当新的数据进来时我们可以优先把这些数据替换掉。","draft":false,"cover":false,"path":"/blogs/2022/lru-algorithm","slug":"2022/lru-algorithm"},"next":null},"__N_SSG":true}