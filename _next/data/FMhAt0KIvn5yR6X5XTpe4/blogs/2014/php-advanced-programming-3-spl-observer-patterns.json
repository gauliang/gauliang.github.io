{"pageProps":{"id":["posts","2014","php-advanced-programming-3-spl-observer-patterns"],"post":{"id":["posts","2014","php-advanced-programming-3-spl-observer-patterns"],"contentHtml":"<p>SPL（标准PHP库 - Standard PHP Library）是PHP5面向对象功能中重要的部分。原文解释是这样的</p>\n<blockquote>\n<p>The Standard PHP Library (SPL) is a collection of interfaces and classes that are meant to solve common problems.</p>\n</blockquote>\n<h2 id=\"hash-SplSubject-和-SplObserver-接口\">SplSubject 和 SplObserver 接口</h2>\n<p>The SplSubject interface is used alongside SplObserver to implement the Observer Design Pattern.</p>\n<p>观察者模式是一种简单的事件系统，包含了两个或更多的互相交互的类。这一模式允许某个类观察另一个类的状态，当被观察类的状态发生变化时，这个模式会得到通知。被观察的类叫 subject，负责观察的类叫做 Observer 。PHP 提供的 SplSubject 和 SplObserver 接口可用来表达这些内容。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\">SplSubject <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 方法 */</span>\n    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">attach</span> <span class=\"token punctuation\">(</span> <span class=\"token class-name type-declaration\">SplObserver</span> <span class=\"token variable\">$observer</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">detach</span> <span class=\"token punctuation\">(</span> <span class=\"token class-name type-declaration\">SplObserver</span> <span class=\"token variable\">$observer</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">notify</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\">SplObserver <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 方法 */</span>\n    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">update</span> <span class=\"token punctuation\">(</span> <span class=\"token class-name type-declaration\">SplSubject</span> <span class=\"token variable\">$subject</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这里，<code>SplSubject</code> 类维护了一个特定状态，当这个状态发生变化时，他就会调用 notify 方法，所以之前使用 attach 注册的 splobserver 实例的 update 就会被调用。这里我们实现一个简单地观察者模式的例子</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Subject,that who makes news</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Newspaper</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>SplSubject</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$observers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//add observer</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>SplObserver</span> <span class=\"token variable\">$observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$observer</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//remove observer</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>SplObserver</span> <span class=\"token variable\">$observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$observer</span><span class=\"token punctuation\">,</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//set breakouts news</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">breakOutNews</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" (<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">}</span></span>)\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//notify observers(or some of them)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$value</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Observer,that who recieves news</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Reader</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SplObserver</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>SplSubject</span> <span class=\"token variable\">$subject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' is reading breakout news &#x3C;b>'</span><span class=\"token operator\">.</span><span class=\"token variable\">$subject</span><span class=\"token operator\">-></span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&#x3C;/b>&#x3C;br>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$newspaper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Newspaper</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Newyork Times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$allen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Allen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jim</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Jim'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$linda</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Linda'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//add reader</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$allen</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jim</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$linda</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//remove reader</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$linda</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//set break outs</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">breakOutNews</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'USA break down!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//=====output======</span>\n<span class=\"token comment\">//Allen is reading breakout news USA break down! (Newyork Times)</span>\n<span class=\"token comment\">//Jim is reading breakout news USA break down! (Newyork Times)</span>\n</code></pre></div>\n<p>上例中我们通过数组存储 observer 对象，使用数组及可能会出现两个问题:</p>\n<ol>\n<li>同一个 observer 可能会被加载多次，导致多次调用同一个对象的 update 方法。</li>\n<li>detach 中需要通过迭代或者搜索数组来找到要删除的 observer 对象，导致运行效率降低。</li>\n</ol>\n<h2 id=\"hash-SplObjectStorage-类\">SplObjectStorage 类</h2>\n<p>PHP5 提供了 SplObjectStorage 类，在这里我们可以用来存储 observer 对象，SplObjectStoraged 的实例就像一个数组，\n但是他所存放的对象是唯一的。SplObjectStorage 还可以使用 detach 直接从集合中删除指定的对象而不用遍历或搜索整个集合。\n下面看一个 SplObjectStorage 的例子：</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$ObjectStorage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SplObjectStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">classa</span>\n <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">#code...</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">classb</span>\n <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">#code...</span>\n <span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">classa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">classb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$ObjectStorage</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ObjectStorage</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ObjectStorage</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ObjectStorage</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'、'</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ReflectionClass</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//output</span>\n  <span class=\"token number\">1</span>、classa\n  <span class=\"token number\">2</span>、classb\n  <span class=\"token punctuation\">[</span>Finished in <span class=\"token number\">0.1</span>s<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>上例中我们可以看到，在 ObjectStorage 这个集合中只有 1 个 calssa，尽管我们添加了两次。并且冲集合中删除一个元素也变得极为简单，\n拿上面的代码来说，只需使用<code>$ObjectStorage->attach($a)</code> 即可轻松的将<code>$a</code>从集合中移除。</p>\n<p>结合 SplObjectStorage 我们再来修改最上面那个观察者模式的例子</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Subject,that who makes news</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Newspaper</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>SplSubject</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$observers</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SplObjectStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//add observer</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>SplObserver</span> <span class=\"token variable\">$observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span> <span class=\"token operator\">-></span> <span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$observer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//remove observer</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>SplObserver</span> <span class=\"token variable\">$observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span> <span class=\"token operator\">-></span> <span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$observer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//set breakouts news</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">breakOutNews</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" (<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">}</span></span>)\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//notify observers(or some of them)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">observers</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$value</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Observer,that who recieves news</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Reader</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SplObserver</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>SplSubject</span> <span class=\"token variable\">$subject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' is reading breakout news '</span><span class=\"token operator\">.</span><span class=\"token variable\">$subject</span><span class=\"token operator\">-></span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$newspaper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Newspaper</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Newyork Times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$allen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Allen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jim</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Jim'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$linda</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Linda'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//add reader</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$allen</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jim</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$linda</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//remove reader</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$linda</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//set break outs</span>\n<span class=\"token variable\">$newspaper</span><span class=\"token operator\">-></span><span class=\"token function\">breakOutNews</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'USA break down!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//=====output======</span>\n<span class=\"token comment\">//Allen is reading breakout news USA break down! (Newyork Times)</span>\n<span class=\"token comment\">//Jim is reading breakout news USA break down! (Newyork Times)</span>\n</code></pre></div>\n","words":4286,"toc":[{"depth":2,"value":"SplSubject 和 SplObserver 接口","id":"hash-SplSubject-和-SplObserver-接口"},{"depth":2,"value":"SplObjectStorage 类","id":"hash-SplObjectStorage-类"}],"title":"PHP 高级编程(3/5) - 使用SPL(标准PHP库)实现观察者模式","author":"高国良","type":"posts","series":false,"date":"2014-06-15T22:06:00.791Z","tags":["php","SPL"],"description":"SPL（标准PHP库 - Standard PHP Library）是 PHP5 面向对象功能中重要的部分。原文解释是这样的“The Standard PHP Library (SPL) is a collection of interfaces and classes that are meant to solve common problems”。","draft":false,"cover":false},"prev":{"title":"PHP 高级编程(2/5) - 反射 API","author":"高国良","type":"posts","series":false,"date":1402776180791,"tags":["php","reflection"],"description":"PHP 5 具有完整的反射 API，添加了对类、接口、函数、方法和扩展进行反向工程的能力。 此外，反射 API 提供了方法来取出函数、类和方法中的文档注释。通过使用反射 API 可以分析其他的类、接口、方法、属性、函数和扩展。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-2-reflex-api","slug":"2014/php-advanced-programming-2-reflex-api"},"next":{"title":"PHP 高级编程(4/5) - SPL异常类之 LogicException 逻辑异常","author":"高国良","type":"posts","series":false,"date":1402961640791,"tags":["php","Exception"],"description":"SPL 提供了一系列标准异常。日常的使用中我们应该根据需求科学的使用它们，来使我们的程序更加健壮。LogicException 是从 Exception 基类派生的，没有添加任何附加方法。抛出逻辑异常和抛出标准一次的方法类似，区别在于逻辑异常须在应用程序编写有误时才抛出。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-4-spl-logic-exception","slug":"2014/php-advanced-programming-4-spl-logic-exception"}},"__N_SSG":true}