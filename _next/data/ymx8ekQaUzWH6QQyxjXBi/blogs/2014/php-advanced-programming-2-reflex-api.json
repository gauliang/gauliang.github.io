{"pageProps":{"id":["posts","2014","php-advanced-programming-2-reflex-api"],"post":{"id":["posts","2014","php-advanced-programming-2-reflex-api"],"contentHtml":"<p>PHP 5 具有完整的反射 API，添加了对类、接口、函数、方法和扩展进行反向工程的能力。 此外，反射 API 提供了方法来取出函数、类和方法中的文档注释。通过使用反射 API 可以分析其他的类、接口、方法、属性、函数和扩展。下面举例展示PHP自身类 Reflection 的定义：</p>\n<h2 id=\"hash-打印\">打印</h2>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token scope\">Reflection<span class=\"token punctuation\">::</span></span><span class=\"token function\">export</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ReflectionClass</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Reflection'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>结果</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">Class</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">&#x3C;</span>internal<span class=\"token punctuation\">:</span>Reflection<span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Reflection</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token operator\">-</span> Constants <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token operator\">-</span> <span class=\"token keyword\">Static</span> properties <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token operator\">-</span> <span class=\"token keyword\">Static</span> methods <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    Method <span class=\"token punctuation\">[</span> <span class=\"token operator\">&#x3C;</span>internal<span class=\"token punctuation\">:</span>Reflection<span class=\"token operator\">></span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> method getModifierNames <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token operator\">-</span> Parameters <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n        Parameter <span class=\"token comment\">#0 [ &#x3C;required> $modifiers ]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    Method <span class=\"token punctuation\">[</span> <span class=\"token operator\">&#x3C;</span>internal<span class=\"token punctuation\">:</span>Reflection<span class=\"token operator\">></span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> method export <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token operator\">-</span> Parameters <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n        Parameter <span class=\"token comment\">#0 [ &#x3C;required> Reflector $reflector ]</span>\n        Parameter <span class=\"token comment\">#1 [ &#x3C;optional> $return ]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token operator\">-</span> Properties <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token operator\">-</span> Methods <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>从打印结果可以看出 export 是 Reflection 类的一个public 的静态方法，提供两个参数，一个必须提供的 reflector类型 ，另一个是可选的，bool类型。不只是export，反射API还有很多，通过这些API我们还可以查询类的元数据，动态的调用类的静态方法，反射还能被用来创建自动稳定编写系统。反射API定义了大量is和has类型的函数，它们可以用来在代码中执行条件判断。比如通过isUserDefined()来判断已经加载的类中哪些是用户定义的。</p>\n<p>（未完待续）</p>\n","words":831,"toc":[{"depth":2,"value":"打印","id":"hash-打印"}],"title":"PHP 高级编程(2/5) - 反射 API","author":"高国良","type":"posts","series":false,"date":"2014-06-14T20:03:00.791Z","tags":["php","reflection"],"description":"PHP 5 具有完整的反射 API，添加了对类、接口、函数、方法和扩展进行反向工程的能力。 此外，反射 API 提供了方法来取出函数、类和方法中的文档注释。通过使用反射 API 可以分析其他的类、接口、方法、属性、函数和扩展。","draft":false,"cover":false},"prev":{"title":"PHP 高级编程(1/5) - 编码规范及文档编写","author":"高国良","type":"posts","series":false,"date":1402621380791,"tags":["php","PHPDoc"],"description":"软件开发中的一个重要环节就是文档编写。他可以帮助未来的程序维护人员和使用者理解你在开发时的思路。也便于日后重新查看代码时不至于无从下手。文档还有一个重要的作用，在不用了解要访问对象的细节情况下也能很好的在对象之间进行交互。文档的编写有一些成熟的行业标准格式，遵守这些行业标准将有助于创建易于阅读的代表，并使自动生成手册成为可能。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-1-coding-specification-and-documentation","slug":"2014/php-advanced-programming-1-coding-specification-and-documentation"},"next":{"title":"PHP 高级编程(3/5) - 使用SPL(标准PHP库)实现观察者模式","author":"高国良","type":"posts","series":false,"date":1402869960791,"tags":["php","SPL"],"description":"SPL（标准PHP库 - Standard PHP Library）是 PHP5 面向对象功能中重要的部分。原文解释是这样的“The Standard PHP Library (SPL) is a collection of interfaces and classes that are meant to solve common problems”。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-3-spl-observer-patterns","slug":"2014/php-advanced-programming-3-spl-observer-patterns"}},"__N_SSG":true}