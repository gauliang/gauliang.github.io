{"pageProps":{"posts":[{"title":"PHP 面向对象编程和设计模式 (3/5) - 单例模式和工厂模式","author":"高国良","type":"posts","series":false,"date":1402483200791,"tags":["php","static","self"],"description":"设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的；设计模式使代码编制真正工...","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-3-singleton-and-factory","slug":"2014/php-oop-and-design-pattern-3-singleton-and-factory"},{"title":"PHP 面向对象编程和设计模式 (2/5) - 静态变量、属性和方法及延迟绑定","author":"高国良","type":"posts","series":false,"date":1402360080791,"tags":["php","static","self","this"],"description":"当希望指向最终的实现功能的类时，就可以使用 static，这个限定符会在代码执行之前立即计算出继承层次结构上最后那个类的成员。这一过程被称作延迟绑定。","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-2-static-variables-properties-methods-and-delayed-binding","slug":"2014/php-oop-and-design-pattern-2-static-variables-properties-methods-and-delayed-binding"},{"title":"PHP 面向对象编程和设计模式 (1/5) - 抽象类、对象接口、instanceof 和契约式编程","author":"高国良","type":"posts","series":false,"date":1402277460791,"tags":["php","instanceof","abstract","implements","interface"],"description":"本文将介绍抽象类、接口和一种称为契约式编程的技术。使用这些 OPP 机制，所编写的代码就不限于只能计算或者输出内容了。这些机制能够在概念层次上定义类之间交互作用的规则，也为应用程序的扩展和定制提供了基础。","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-1-abstract-interfaces-instanceof-and-contractual-programming","slug":"2014/php-oop-and-design-pattern-1-abstract-interfaces-instanceof-and-contractual-programming"},{"title":"为 Sublime Text 3059 配置 PHP 编译环境","author":"高国良","type":"posts","series":false,"date":1402013820791,"tags":["php","development"],"description":"为 sublime Text 配置 PHP 编译环境，首先要确保系统安装了PHP,并把PHP设置到环境变量里。","draft":false,"cover":false,"path":"/blogs/2014/configure-the-php-compilation-environment-for-the-sublimetext-3059","slug":"2014/configure-the-php-compilation-environment-for-the-sublimetext-3059"},{"title":"JavaScript高级编程 (2) - HTML 与 JavaScript","author":"高国良","type":"posts","series":false,"date":1402009560791,"tags":["javascript","html"],"description":"向HTML 页面中插入JavaScript 的主要方法，就是使用元素。这个元素由Netscape 创造并在Netscape Navigator 2 中首先实现。后来，这个元素被加入到正式的HTML 规范中。","draft":false,"cover":false,"path":"/blogs/2014/html-and-javascript","slug":"2014/html-and-javascript"},{"title":"HTML 子元素的 margin-top 为什么会应用在父元素上","author":"高国良","type":"posts","series":false,"date":1402004460791,"tags":["css","layout"],"description":"当对页面中元素设置 margin-top 样式时，如果该元素有父元素，则 margin-top 会应用于父元素，子元素的 top 与父元素的 top 重叠。","draft":false,"cover":false,"path":"/blogs/2014/css-margin-merge","slug":"2014/css-margin-merge"},{"title":"windows7 下 apache2.4 和 php5.5 及 mysql5.6 的安装与配置","author":"高国良","type":"posts","series":false,"date":1401990240791,"tags":["php","Apache","Mysql"],"description":"准备的软件、安装","draft":false,"cover":false,"path":"/blogs/2014/php5.5-apache2.4-mysql5.6-windows7","slug":"2014/php5.5-apache2.4-mysql5.6-windows7"},{"title":"JavaScript高级编程 (1) - javscript是什么","author":"高国良","type":"posts","series":false,"date":1400520480791,"tags":["javascript"],"description":"《重温javascript》这是一些列 javascript 的学习笔记，部分内容摘自书本或者网络，我这里只是基于自己的理解进行了梳理整理。","draft":false,"cover":false,"path":"/blogs/2014/what-is-the-javscript","slug":"2014/what-is-the-javscript"},{"title":"Composer 概述及其自动加载探秘","author":"高国良","type":"posts","series":false,"date":1400205480791,"tags":["Composer","php","laravel"],"description":"刚开始接触 Laravel，一天时间走马观花的看了一些官方文档之后便开始了 Laravel 的学习。这里谈到的都是最基础的东西，各路大神，可直接略过。本节主要记录 Composer 概述及其自动加载相关的流程。","draft":false,"cover":false,"path":"/blogs/2014/laravel-composer","slug":"2014/laravel-composer"}],"pageSize":20,"total":109,"pageNumber":"6"},"__N_SSG":true}