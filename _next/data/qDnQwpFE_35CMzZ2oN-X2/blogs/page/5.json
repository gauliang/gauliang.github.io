{"pageProps":{"posts":[{"title":"SFTP 命令列表以备查询","author":"高国良","type":"posts","series":false,"date":1409008260791,"tags":["sftp"],"description":"Available commands","draft":false,"cover":false,"path":"/blogs/2014/sftp-commands","slug":"2014/sftp-commands"},{"title":"WPF中异步更新UI元素","author":"高国良","type":"posts","series":false,"date":1408664340791,"tags":["wpf","csharp"],"description":"实现点击 button 时，lable 的内容从 0 开始自动递增。","draft":false,"cover":false,"path":"/blogs/2014/aynchronous-update-ui-element-in-wpf","slug":"2014/aynchronous-update-ui-element-in-wpf"},{"title":"Android 开发环境在 Windows7 下的部署安装","author":"高国良","type":"posts","series":false,"date":1407256440791,"tags":["Android"],"description":"Android SDK 为 Android 应用的开发、测试和调试提了必要的API库和开发工具。如果你是一个 Android 开发新手，推荐你下载使用 ADT Bundle 以快速开始 Android 的开发，它提供了必要的 Android sdk 组件和一个内置 ADT 的 Eclipse 版本。","draft":false,"cover":false,"path":"/blogs/2014/install-the-android-development-environment-on-the-window7-system","slug":"2014/install-the-android-development-environment-on-the-window7-system"},{"title":"Android Studio vs. Eclipse ADT Comparison","author":"高国良","type":"posts","series":false,"date":1407253860791,"tags":["java","eclipse","android"],"description":"Android Studio 是一个新的基于 IntelliJ IDEA Android 的安卓开发环境，它对Eclipse ADT 进行改进并新增了功能。","draft":false,"cover":false,"path":"/blogs/2014/android-studio-vs-eclipse-adt-comparison","slug":"2014/android-studio-vs-eclipse-adt-comparison"},{"title":"JQuery 滚动条插件 perfect-scrollbar","author":"GauLiang","type":"posts","series":false,"date":1406193000791,"tags":[],"description":"I worked on a personal project recently, and I was trying to find the jQuery scrollbar plugin that's perfect. But there was no perfect scrollbar plugin. That's why I decided to make one.","draft":false,"cover":false,"path":"/blogs/2014/jquery-perfect-scrollbar","slug":"2014/jquery-perfect-scrollbar"},{"title":"nginx+php 在windows下的简单配置安装","author":"高国良","type":"posts","series":false,"date":1405207560791,"tags":["php","Apache","Nginx"],"description":"nginx+php 在windows下的简单配置安装","draft":false,"cover":false,"path":"/blogs/2014/nginx-php-windows","slug":"2014/nginx-php-windows"},{"title":"MySql 管理操作常用命令","author":"高国良","type":"posts","series":false,"date":1404956640791,"tags":["mysql","password"],"description":"登录、权限、用户、密码","draft":false,"cover":false,"path":"/blogs/2014/common-commands-for-mysql","slug":"2014/common-commands-for-mysql"},{"title":"JS 事件调试 - 查找 HTML 元素绑定的事件以及绑定代码所在位置","author":"高国良","type":"posts","series":false,"date":1403780580791,"tags":["javascript","event","debug"],"description":"日常的网页开发调试工作中，经常需要知道指定的某个网页元素绑定了哪些事件以及绑定代码的位置，下面介绍三种用来跟踪页面中的事件的方法。","draft":false,"cover":false,"path":"/blogs/2014/js-event-debug","slug":"2014/js-event-debug"},{"title":"Laravel - 安装与配置","author":"高国良","type":"posts","series":false,"date":1403525220791,"tags":["php","laravel"],"description":"有多重途径可以安装 Laravel，下面是通过 Composer 安装 Laravel 的方法。Composer 是 PHP 的一个依赖管理工具。它允许你申明项目所依赖的代码库，它会在你的项目中为你安装他们。","draft":false,"cover":false,"path":"/blogs/2014/laravel-install","slug":"2014/laravel-install"},{"title":"PHP MVC 架构","author":"高国良","type":"posts","series":false,"date":1403135580791,"tags":["reflection","MVC"],"description":"MVC (Model-View-Controller,模型-视图-控制器)是一种可以简化应用程序开发和维护的非常常用的设计模式。它从逻辑上把应用程序分隔为个部分。","draft":false,"cover":false,"path":"/blogs/2014/php-mvc-architecture","slug":"2014/php-mvc-architecture"},{"title":"PHP 高级编程(5/5) - SPL 数组重载","author":"高国良","type":"posts","series":false,"date":1402966320791,"tags":["php","SPL","array"],"description":"ArrayAccess 接口是对象的行为看起来像个数组，定义了四个方法。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-5-spl-array-overload","slug":"2014/php-advanced-programming-5-spl-array-overload"},{"title":"PHP 高级编程(4/5) - SPL异常类之 LogicException 逻辑异常","author":"高国良","type":"posts","series":false,"date":1402961640791,"tags":["php","Exception"],"description":"SPL 提供了一系列标准异常。日常的使用中我们应该根据需求科学的使用它们，来使我们的程序更加健壮。LogicException 是从 Exception 基类派生的，没有添加任何附加方法。抛出逻辑异常和抛出标准一次的方法类似，区别在于逻辑异常须在应用程序编写有误时才抛出。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-4-spl-logic-exception","slug":"2014/php-advanced-programming-4-spl-logic-exception"},{"title":"PHP 高级编程(3/5) - 使用SPL(标准PHP库)实现观察者模式","author":"高国良","type":"posts","series":false,"date":1402869960791,"tags":["php","SPL"],"description":"SPL（标准PHP库 - Standard PHP Library）是 PHP5 面向对象功能中重要的部分。原文解释是这样的“The Standard PHP Library (SPL) is a collection of interfaces and classes that are meant to solve common problems”。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-3-spl-observer-patterns","slug":"2014/php-advanced-programming-3-spl-observer-patterns"},{"title":"PHP 高级编程(2/5) - 反射 API","author":"高国良","type":"posts","series":false,"date":1402776180791,"tags":["php","reflection"],"description":"PHP 5 具有完整的反射 API，添加了对类、接口、函数、方法和扩展进行反向工程的能力。 此外，反射 API 提供了方法来取出函数、类和方法中的文档注释。通过使用反射 API 可以分析其他的类、接口、方法、属性、函数和扩展。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-2-reflex-api","slug":"2014/php-advanced-programming-2-reflex-api"},{"title":"PHP 高级编程(1/5) - 编码规范及文档编写","author":"高国良","type":"posts","series":false,"date":1402621380791,"tags":["php","PHPDoc"],"description":"软件开发中的一个重要环节就是文档编写。他可以帮助未来的程序维护人员和使用者理解你在开发时的思路。也便于日后重新查看代码时不至于无从下手。文档还有一个重要的作用，在不用了解要访问对象的细节情况下也能很好的在对象之间进行交互。文档的编写有一些成熟的行业标准格式，遵守这些行业标准将有助于创建易于阅读的代表，并使自动生成手册成为可能。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-1-coding-specification-and-documentation","slug":"2014/php-advanced-programming-1-coding-specification-and-documentation"},{"title":"PHP 面向对象编程和设计模式 (5/5) - PHP 命名空间的使用及名称解析规则","author":"高国良","type":"posts","series":false,"date":1402568580791,"tags":["php","namespace"],"description":"PHP 在 5.3.0 以后的版本开始支持命名空间。什么是命名空间？从广义上来说，命名空间是一种封装事物的方法。在很多地方都可以见到这种抽象概念。在PHP中，命名空间用来解决在编写类库或应用程序时创建可重用的代码如类或函数时碰到的两类问题","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-5-namespace","slug":"2014/php-oop-and-design-pattern-5-namespace"},{"title":"PHP 面向对象编程和设计模式 (4/5) - 异常的定义、扩展及捕获","author":"高国良","type":"posts","series":false,"date":1402536000791,"tags":["php","Exception"],"description":"PHP5 增加了类似其他语言的异常处理模块。在PHP代码中所产生的异常可被 throw 语句抛出并被 catch 语句捕获。需要进行异常处理的代码都必须放入到 try 代码块内，以便捕获可能存在的异常。每个try至少对应一个 catch 块。使用多个 catch 可以捕获不同的类所产生的异常。","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-4-exception","slug":"2014/php-oop-and-design-pattern-4-exception"},{"title":"PHP 面向对象编程和设计模式 (3/5) - 单例模式和工厂模式","author":"高国良","type":"posts","series":false,"date":1402483200791,"tags":["php"],"description":"设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的；设计模式使代码编制真正工...","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-3-singleton-and-factory","slug":"2014/php-oop-and-design-pattern-3-singleton-and-factory"},{"title":"PHP 面向对象编程和设计模式 (2/5) - 静态变量、属性和方法及延迟绑定","author":"高国良","type":"posts","series":false,"date":1402360080791,"tags":["php"],"description":"当希望指向最终的实现功能的类时，就可以使用 static，这个限定符会在代码执行之前立即计算出继承层次结构上最后那个类的成员。这一过程被称作延迟绑定。","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-2-static-variables-properties-methods-and-delayed-binding","slug":"2014/php-oop-and-design-pattern-2-static-variables-properties-methods-and-delayed-binding"},{"title":"PHP 面向对象编程和设计模式 (1/5) - 抽象类、对象接口、instanceof 和契约式编程","author":"高国良","type":"posts","series":false,"date":1402277460791,"tags":["php"],"description":"本文将介绍抽象类、接口和一种称为契约式编程的技术。使用这些 OPP 机制，所编写的代码就不限于只能计算或者输出内容了。这些机制能够在概念层次上定义类之间交互作用的规则，也为应用程序的扩展和定制提供了基础。","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-1-abstract-interfaces-instanceof-and-contractual-programming","slug":"2014/php-oop-and-design-pattern-1-abstract-interfaces-instanceof-and-contractual-programming"}],"pageSize":20,"total":106,"pageNumber":"5"},"__N_SSG":true}