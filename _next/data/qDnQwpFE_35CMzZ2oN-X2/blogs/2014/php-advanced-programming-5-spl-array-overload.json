{"pageProps":{"id":["posts","2014","php-advanced-programming-5-spl-array-overload"],"post":{"id":["posts","2014","php-advanced-programming-5-spl-array-overload"],"contentHtml":"<h2 id=\"hash-ArrayAccess-接口\">ArrayAccess 接口</h2>\n<p>ArrayAccess 接口是对象的行为看起来像个数组，定义了四个方法。接口概要如下：</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\">ArrayAccess <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/* Methods */</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> boolean <span class=\"token function\">offsetExists</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$offset</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">mixed</span> <span class=\"token function\">offsetGet</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$offset</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">offsetSet</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$offset</span> <span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$value</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">offsetUnset</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$offset</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ArrayAccess 接口自身没有提供计算书组重元素数量的功能，如果要计算数量可以通过实现 Countble 接口。这个接口包含了一个 <code>count()</code> 方法，并且返回元素的数量。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MyArray</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ArrayAccess</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$_arr</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_arr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">offsetSet</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_arr</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">offsetGet</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_arr</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">offsetExists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">array_key_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">,</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">offsetUnset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_arr</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$MyArray</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$MyArray</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'first'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$MyArray</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'first'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$MyArray</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'first'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-ArratObject-类介绍\">ArratObject 类介绍</h2>\n<p>ArrayObject 类是一个 ArrayAccess 接口的实现类，它提供了迭代功能，以及很多用来排序和处理数据的非常有用的方法。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\">ArrayObject <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IteratorAggregate</span> <span class=\"token punctuation\">,</span> ArrayAccess <span class=\"token punctuation\">,</span> Serializable <span class=\"token punctuation\">,</span> Countable <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/* Constants */</span>\n<span class=\"token keyword\">const</span> integer <span class=\"token constant\">STD_PROP_LIST</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> integer <span class=\"token constant\">ARRAY_AS_PROPS</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* Methods */</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">__construct</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token keyword type-declaration\">mixed</span> <span class=\"token variable\">$input</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">int</span> <span class=\"token variable\">$flags</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$iterator_class</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"ArrayIterator\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">append</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$value</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">asort</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">int</span> <span class=\"token function\">count</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">array</span> <span class=\"token function\">exchangeArray</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$input</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">array</span> <span class=\"token function\">getArrayCopy</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">int</span> <span class=\"token function\">getFlags</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> ArrayIterator <span class=\"token function\">getIterator</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">string</span> <span class=\"token function\">getIteratorClass</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">ksort</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">natcasesort</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">natsort</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">bool</span> <span class=\"token function\">offsetExists</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$index</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">mixed</span> <span class=\"token function\">offsetGet</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$index</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">offsetSet</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$index</span> <span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$newval</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">offsetUnset</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$index</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">string</span> <span class=\"token function\">serialize</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">setFlags</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">int</span> <span class=\"token variable\">$flags</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">setIteratorClass</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$iterator_class</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">uasort</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">callable</span> <span class=\"token variable\">$cmp_function</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">uksort</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">callable</span> <span class=\"token variable\">$cmp_function</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword type-declaration\">void</span> <span class=\"token function\">unserialize</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$serialized</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n","words":1843,"toc":[{"depth":2,"value":"ArrayAccess 接口","id":"hash-ArrayAccess-接口"},{"depth":2,"value":"ArratObject 类介绍","id":"hash-ArratObject-类介绍"}],"title":"PHP 高级编程(5/5) - SPL 数组重载","author":"高国良","type":"posts","series":false,"date":"2014-06-17T00:52:00.791Z","tags":["php","SPL","array"],"description":"ArrayAccess 接口是对象的行为看起来像个数组，定义了四个方法。","draft":false,"cover":false},"prev":{"title":"PHP 高级编程(4/5) - SPL异常类之 LogicException 逻辑异常","author":"高国良","type":"posts","series":false,"date":1402961640791,"tags":["php","Exception"],"description":"SPL 提供了一系列标准异常。日常的使用中我们应该根据需求科学的使用它们，来使我们的程序更加健壮。LogicException 是从 Exception 基类派生的，没有添加任何附加方法。抛出逻辑异常和抛出标准一次的方法类似，区别在于逻辑异常须在应用程序编写有误时才抛出。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-4-spl-logic-exception","slug":"2014/php-advanced-programming-4-spl-logic-exception"},"next":{"title":"PHP MVC 架构","author":"高国良","type":"posts","series":false,"date":1403135580791,"tags":["reflection","MVC"],"description":"MVC (Model-View-Controller,模型-视图-控制器)是一种可以简化应用程序开发和维护的非常常用的设计模式。它从逻辑上把应用程序分隔为个部分。","draft":false,"cover":false,"path":"/blogs/2014/php-mvc-architecture","slug":"2014/php-mvc-architecture"}},"__N_SSG":true}