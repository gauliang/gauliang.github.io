{"pageProps":{"params":{"id":["2020","what-are-cjs-amd-umd-and-esm-in-javascript"]},"post":{"id":["posts","2020","what-are-cjs-amd-umd-and-esm-in-javascript"],"contentHtml":"<div class=\"image-widget\"><img src=\"/attachments/posts/2020/what-are-cjs-amd-umd-and-esm-in-javascript.files/001.jpg\" alt=\"\"></div>\n<h2 id=\"hash-CommonJS\">CommonJS</h2>\n<p>CommonJS 是同步导入，主要用于服务器端，无法在浏览器中直接运行。\n导入 CJS 时，它将为你提供导入对象的副本，不支持 Tree-shaking。\n通过 <strong>require</strong> 和 <strong>exports</strong> 与模块系统交互。</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//importing</span>\n<span class=\"token keyword\">const</span> doSomething <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./doSomething.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//exporting</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2 id=\"hash-AMD\">AMD</h2>\n<p>AMD 全称 Asynchronous Module Definition —— 异步模块定义，由 RequireJS 实现，可在浏览器直接使用，语法相对复杂。</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'dep1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dep2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dep1<span class=\"token punctuation\">,</span> dep2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Define the module value by returning a value.</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Or</span>\n\n<span class=\"token comment\">// \"simplified CommonJS wrapping\" https://requirejs.org/docs/whyamd.html</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">require</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> dep1 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dep1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        dep2 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dep2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-UMD\">UMD</h2>\n<p>通用模块定义，可以在前端和后端工作。与 CJS 和 AMD 不同，UMD 更像是一种配置多个模块系统的模式。\nUMD 本质上创建了一种使用这两种方法之一的方式，同时还支持全局变量定义。结果就是，UMD 模块能够在客户端和服务器上工作。</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">root<span class=\"token punctuation\">,</span> factory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> define <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">&#x26;&#x26;</span> define<span class=\"token punctuation\">.</span><span class=\"token property-access\">amd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"jquery\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"underscore\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jquery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"underscore\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n        root<span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Requester</span></span> <span class=\"token operator\">=</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span><span class=\"token property-access\">$</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$<span class=\"token punctuation\">,</span> _</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// this is where I defined my module implementation</span>\n\n    <span class=\"token keyword\">var</span> <span class=\"token maybe-class-name\">Requester</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// ... };</span>\n\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token maybe-class-name\">Requester</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-ESM\">ESM</h2>\n<p>ES 模块，在许多现代浏览器中均可使用。他具有类似 CJS 的简单语法和 AMD 的异步能力。支持模块的运行时/静态加载。\n由于 ES6 的静态模块结构，ESM 可以通过 tree-shaking 优化。允许像 Rollup 这样的打包程序删除不必要的代码，从而加快加载速度。</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./myLib'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// your Function</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function\">function1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function\">function2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-参考\">参考</h2>\n<ol>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://www.freecodecamp.org/news/anatomy-of-js-module-systems-and-building-libraries-fadcd8dbd0e/\">https://www.freecodecamp.org/news/anatomy-of-js-module-systems-and-building-libraries-fadcd8dbd0e/</a></li>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://irian.to/blogs/what-are-cjs-amd-umd-and-esm-in-javascript/\">https://irian.to/blogs/what-are-cjs-amd-umd-and-esm-in-javascript/</a></li>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"http://www.commonjs.org/\">http://www.commonjs.org/</a></li>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://requirejs.org/\">https://requirejs.org/</a></li>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://addyosmani.com/writing-modular-js/\">https://addyosmani.com/writing-modular-js/</a></li>\n</ol>\n","words":1790,"toc":[{"depth":2,"value":"CommonJS","id":"hash-CommonJS"},{"depth":2,"value":"AMD","id":"hash-AMD"},{"depth":2,"value":"UMD","id":"hash-UMD"},{"depth":2,"value":"ESM","id":"hash-ESM"},{"depth":2,"value":"参考","id":"hash-参考"}],"title":"Javascript 模块化概述","date":"2020-09-05T08:04:37.000Z","draft":false,"description":"当我们提及**模块化**时，通常意味着是由一组高度分离的，不同的功能块存储在模块中组成的。在可能的情况下，通过松散耦合消除依赖关系简化应用程序的可维护性。 本文概述集中流行的模块化规范，以便在不同应用场景中能够快速决策选型。","type":"posts","tags":["javascript","node.js","CommonJS","esm","amd","umd"],"series":false,"author":"Gl","cover":"001.jpg"},"prev":{"title":"Javascript 箭头函数最佳实践[译]","date":1599274300000,"draft":false,"description":"箭头函数的语法简洁明了，非常适合作为回调使用。本文介绍 5 中关于箭头函数的最佳实践。","type":"posts","tags":["javascript","node.js","arrow-function","best-practices"],"series":false,"author":"Gl","cover":"javascript-arrow-function-best-practices.jpg","path":"/blogs/2020/javascript-arrow-function-best-practices","slug":"2020/javascript-arrow-function-best-practices"},"next":{"title":"CommonJS Modules","date":1599358780000,"draft":false,"description":"在 ES2015 标准之前，JavaScript语言没有模块化组织代码的原生方法，CommonJS 模块格式填补了这一空白。 CommonJS 规范了如何编写模块，以及如何在模块系统之间实现互操作。由于其同步执行特性，CMD 主要用于服务端开发，也可通过打包工具处理后用在浏览器端。","type":"posts","tags":["javascript","node.js","commonjs"],"series":false,"author":"Gl","cover":"001.jpg","path":"/blogs/2020/commonJS-modules","slug":"2020/commonJS-modules"}},"__N_SSG":true}