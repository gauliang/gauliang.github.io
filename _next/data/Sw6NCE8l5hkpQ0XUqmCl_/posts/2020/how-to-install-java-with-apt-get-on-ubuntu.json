{"pageProps":{"post":{"id":["2020"],"contentHtml":"<p>Java 和 JVM（Java 的虚拟机）被广泛使用，本文介绍如何使用 <code>apt-get</code> 安装不同版本的 Open JRE 和 Open JDK。JRE 仅用于提供 Java 应用程序执行环境，如果要编译 Java 应用程序，则要安装 JDK。</p>\n<h2 id=\"hash-先决条件\">先决条件</h2>\n<ul>\n<li>Ubuntu 18.04 服务器</li>\n<li>具有 sudo 或 root 执行权限的账户</li>\n</ul>\n<h2 id=\"hash-安装默认版本\">安装默认版本</h2>\n<p>安装 Java 最简单的做法是使用 Ubuntu 系统自带的版本。默认情况下，Ubuntu 18.04 包含 Open JDK，它是 JRE 和 JDK 的开源变体。</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 更新软件包索引：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n\n<span class=\"token comment\"># 检查是否已安装Java：</span>\njava -version\n</code></pre></div>\n<p>如果当前未安装 Java，则会看到以下输出：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">Command <span class=\"token string\">'java'</span> not found, but can be installed with:\n<span class=\"token punctuation\">..</span>.\n</code></pre></div>\n<p>执行以下命令以安装 OpenJDK：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jre\n</code></pre></div>\n<p>该命令将安装 Java Runtime Environment（JRE），这将允许您运行几乎所有的Java软件。再次验证安装：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ java -version\nopenjdk version <span class=\"token string\">\"11.0.5\"</span> <span class=\"token number\">2019</span>-10-15\nOpenJDK Runtime Environment <span class=\"token punctuation\">(</span>build <span class=\"token number\">11.0</span>.5+10-post-Ubuntu-0ubuntu1.118.04<span class=\"token punctuation\">)</span>\nOpenJDK <span class=\"token number\">64</span>-Bit Server VM <span class=\"token punctuation\">(</span>build <span class=\"token number\">11.0</span>.5+10-post-Ubuntu-0ubuntu1.118.04, mixed mode, sharing<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>除 JRE 之外，您可能还需要 Java 开发工具包（JDK），以便编译和运行某些基于 Java 的应用程序。要安装 JDK，请执行以下命令，该命令还将安装JRE：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jdk\n</code></pre></div>\n<p>通过检查编译器 javac 的版本，验证是否已安装JDK ：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">javac -version\n\njavac <span class=\"token number\">11.0</span>.5\n</code></pre></div>\n<h2 id=\"hash-安装指定版本\">安装指定版本</h2>\n<p>您可以安装默认的 OpenJDK 软件包，也可以安装不同版本的 OpenJDK。</p>\n<p>列出可用版本清单：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">kelsen@kelsen-XPS-L521X:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openjdk-\nopenjdk-11-dbg           openjdk-11-jre-zero      openjdk-12-jre-headless  openjdk-13-jre           openjdk-8-jdk-headless\nopenjdk-11-demo          openjdk-11-source        openjdk-12-jre-zero      openjdk-13-jre-headless  openjdk-8-jre\nopenjdk-11-doc           openjdk-12-dbg           openjdk-12-source        openjdk-13-jre-zero      openjdk-8-jre-dcevm\nopenjdk-11-jdk           openjdk-12-demo          openjdk-13-dbg           openjdk-13-source        openjdk-8-jre-headless\nopenjdk-11-jdk-headless  openjdk-12-doc           openjdk-13-demo          openjdk-8-dbg            openjdk-8-jre-zero\nopenjdk-11-jre           openjdk-12-jdk           openjdk-13-doc           openjdk-8-demo           openjdk-8-source\nopenjdk-11-jre-dcevm     openjdk-12-jdk-headless  openjdk-13-jdk           openjdk-8-doc            \nopenjdk-11-jre-headless  openjdk-12-jre           openjdk-13-jdk-headless  openjdk-8-jdk\n</code></pre></div>\n<h3 id=\"hash-OpenJDK-8\">OpenJDK 8</h3>\n<p>Java 8 是当前的长期支持版本，尽管公共维护已于 2019 年 1 月结束，但仍得到广泛支持。要安装 OpenJDK 8，请执行以下命令：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openjdk-8-jdk\n\n<span class=\"token comment\"># 验证安装</span>\njava -version\n</code></pre></div>\n<p>也可以仅安装 JRE，可以通过执行 <code>sudo apt install openjdk-8-jre</code> 来完成。</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openjdk-11-jre\n</code></pre></div>\n<h3 id=\"hash-OpenJDK11/12\">OpenJDK11/12</h3>\n<p>如果要安装 Java11</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openjdk-11-jdk\n\n<span class=\"token comment\"># 或者仅安装 jre</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openjdk-11-jre\n</code></pre></div>\n<h2 id=\"hash-管理-Java\">管理 Java</h2>\n<p>一台服务器上可以安装多个版本的 Java。使用 <code>update-alternatives</code> 命令可以配置默认使用版本。</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> update-alternatives --config java\n\nThere are <span class=\"token number\">3</span> choices <span class=\"token keyword\">for</span> the alternative java <span class=\"token punctuation\">(</span>providing /usr/bin/java<span class=\"token punctuation\">)</span>.\n\n  Selection    Path                                            Priority   Status\n------------------------------------------------------------\n  <span class=\"token number\">0</span>            /usr/lib/jvm/java-13-openjdk-amd64/bin/java      <span class=\"token number\">1311</span>      auto mode\n* <span class=\"token number\">1</span>            /usr/lib/jvm/java-11-openjdk-amd64/bin/java      <span class=\"token number\">1111</span>      manual mode\n  <span class=\"token number\">2</span>            /usr/lib/jvm/java-13-openjdk-amd64/bin/java      <span class=\"token number\">1311</span>      manual mode\n  <span class=\"token number\">3</span>            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   <span class=\"token number\">1081</span>      manual mode\n</code></pre></div>\n<p>输入与 Java 版本关联的数字以将其用作默认值，或按 ENTER 保留当前设置。</p>\n<p>您可以对其他 Java 命令执行此操作，例如编译器（javac）：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> update-alternatives --config javac\n</code></pre></div>\n<h2 id=\"hash-环境变量-JAVA_HOME\">环境变量 JAVA_HOME</h2>\n<p>使用 Java 编写的许多程序都使用 JAVA_HOME 环境变量来确定 Java 安装位置。要设置此环境变量，首先确定 Java 的安装位置。可以通过 <code>update-alternatives</code> 命令获取 Java 的安装路径。</p>\n<p>复制默认版本 Java 的安装路径，然后编辑 <code>/etc/environment</code>，在此文件的末尾，添加或替换您自己复制的路径：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/lib/jvm/java-11-openjdk-amd64/bin/\"</span>\n</code></pre></div>\n<p>重新加载此文件以将更改应用于当前会话：</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> /etc/environment\n\n<span class=\"token comment\"># 验证</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$JAVA_HOME</span>\n</code></pre></div>\n","toc":[{"depth":2,"value":"先决条件","id":"hash-先决条件"},{"depth":2,"value":"安装默认版本","id":"hash-安装默认版本"},{"depth":2,"value":"安装指定版本","id":"hash-安装指定版本"},{"depth":2,"value":"管理 Java","id":"hash-管理-Java"},{"depth":2,"value":"环境变量 JAVA_HOME","id":"hash-环境变量-JAVA_HOME"}],"title":"Ubuntu 18.04 安装 Java 环境 - OpenJDK","date":"2020-01-20T16:20:08.000Z","draft":false,"description":"Java 和 JVM（Java 的虚拟机）被广泛使用，本文介绍如何使用 apt-get 安装不同版本的 Open JRE 和 Open JDK。JRE 仅用于提供 Java 应用程序执行环境，如果要编译 Java 应用程序，则要安装 JDK。","type":"posts","tags":["Java"],"series":[],"author":"Gl","cover":false},"prev":{"title":"使用 kubeadm 安装单控制平面 Kubernetes 集群","date":1579437054000,"draft":false,"description":"本文主要介绍如何使用 kubeadm 安装部署单控制平面 Kubernetes v1.17.0 集群，所谓单控制平面，顾名思义就是由一个 Control-plane Node 和多个 Work Node 组成的 Kubernetes 集群。","type":"posts","tags":["kubernetes","docker","dashboard","ingress-nginx"],"series":[],"author":"Gl","cover":"cover.png","slug":"2020/creating-single-control-plane-cluster-with-kubeadm"},"next":{"title":"常用系统 root 密码重置","date":1579617888000,"draft":false,"description":"本文介绍如何重置各类常用业务系统的超级管理员账号密码，如 MySQL、Gitlab 等。","type":"posts","tags":["MySQL","Gitlab","handbook"],"series":[],"author":"Gl","cover":"password_security_feature.png","slug":"2020/reset-password"}},"__N_SSG":true}