{"pageProps":{"id":["posts","2014","dw-ext-calling-c-function-javascript"],"post":{"id":["posts","2014","dw-ext-calling-c-function-javascript"],"contentHtml":"<p>After you understand how C-level extensibility works in Dreamweaver and its dependency on certain data types and functions, it's useful to know how to build a library and call a function.</p>\n<p>The following example requires the following five files, located in the <code>Dreamweaver-application-folder/Tutorial_assets/Extending</code> folder as archives for both the Macintosh and Windows platforms:</p>\n<ul>\n<li>The <code>mm_jsapi.h</code> header file includes definitions for the data types and functions that are described in C-level extensibility and the JavaScript interpreter.</li>\n<li>The <code>mm_jsapi_environment.h</code> file defines the<code> MM_Environment.h</code> structure.</li>\n<li>The <code>MMInfo.h</code> file provides access to the Design Notes API.</li>\n<li>The <code>Sample.c</code> example file defines the <code>computeSum()</code> function.</li>\n<li>The <code>Sample.mak</code> make file lets you build the <code>Sample.c</code> source file into a DLL with Microsoft Visual C++; Sample.mcp is the equivalent file for building a Mach-O Bundle with Metrowerks CodeWarrior and Sample.xcode is the equivalent file for Apple Xcode. If you use another tool, you can create the makefile.</li>\n</ul>\n<h2 id=\"hash-Build-the-DLL-in-Windows-using-VS-Net-2003\">Build the DLL in Windows using VS.Net 2003</h2>\n<ol>\n<li>Use File > Open, and select Sample.mak with Files Of Type set to All Files (*.*). (VS.Net 2003 does not open MAK files directly). You are then prompted to verify that you want to convert the project to the new format.</li>\n<li>Select Build > Rebuild Solution.</li>\n</ol>\n<p>When the build operation finishes, the Sample.dll file appears in the folder that contains Sample.mak (or one of its subfolders).</p>\n<h2 id=\"hash-Build-the-DLL-in-Windows-using-Microsoft-Visual-C-\">Build the DLL in Windows using Microsoft Visual C++</h2>\n<ol>\n<li>In Microsoft Visual C++, select File > Open Workspace, and select Sample.mak.</li>\n<li>Select Build > Rebuild All.</li>\n</ol>\n<p>When the build operation finishes, the Sample.dll file appears in the folder that contains Sample.mak (or one of its subfolders).</p>\n<h2 id=\"hash-Build-the-shared-library-on-the-Macintosh-using-Metrowerks-CodeWarrior-9-or-later\">Build the shared library on the Macintosh using Metrowerks CodeWarrior 9 or later</h2>\n<ol>\n<li>Open Sample.mcp.</li>\n<li>Build the project (Project > Make) to generate a Mach-O Bundle.</li>\n</ol>\n<p>When the build operation finishes, the Sample.bundle file appears in the folder that contains Sample.mcp.</p>\n<blockquote>\n<p><strong>Note</strong><br>\nThe Mach-O Bundle that is generated can only be used in Dreamweaver 8 and later. Earlier versions of Dreamweaver do not recognize it.</p>\n</blockquote>\n<h2 id=\"hash-Build-the-shared-library-on-the-Macintosh-using-Apple-Xcode-1-5-or-later\">Build the shared library on the Macintosh using Apple Xcode 1.5 or later</h2>\n<ol>\n<li>Open Sample.xcode.</li>\n<li>Build the project (Build > Build) to generate a Mach-O Bundle.</li>\n</ol>\n<p>When the build operation finishes, the Sample.bundle file appears in the build folder that is next to the Sample.xcode file.</p>\n<blockquote>\n<p><strong>Note</strong><br>\nThe Mach-O Bundle that is generated can only be used in Dreamweaver 8 and later. Earlier versions of Dreamweaver do not recognize it.</p>\n</blockquote>\n<h2 id=\"hash-Call-the-computeSum-function-from-the-Insert-Horizontal-Rule-object\">Call the computeSum() function from the Insert Horizontal Rule object</h2>\n<ol>\n<li>Create a folder called JSExtensions in the Configuration folder within the Dreamweaver application folder.</li>\n<li>Copy Sample.dll (Windows) or Sample.bundle (Macintosh) to the JSExtensions folder.</li>\n<li>In a text editor, open the HR.htm file in the <code>Configuration/Objects/Common</code> folder.</li>\n<li>Add the line alert(Sample.computeSum(2,2)); to the <code>objectTag()</code> function, as shown in the following example:</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-c\"><code class=\"language-c\">function <span class=\"token function\">objectTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Return the html tag that should be inserted</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>Sample<span class=\"token punctuation\">.</span><span class=\"token function\">computeSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"&#x3C;HR>\"</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"5\">\n<li>Save the file and restart Dreamweaver.</li>\n</ol>\n<p>To execute thecomputeSum()function, select Insert > HTML > Horizontal Rule.</p>\n<p>A dialog box that contains the number 4 (the result of computing the sum of 2 plus 2) appears.</p>\n<ul>\n<li>标题：Calling a C function from JavaScript</li>\n<li>原址：<a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"http://helpx.adobe.com/dreamweaver/extend/calling-c-function-javascript.html\">http://helpx.adobe.com/dreamweaver/extend/calling-c-function-javascript.html</a></li>\n</ul>\n","words":3037,"toc":[{"depth":2,"value":"Build the DLL in Windows using VS.Net 2003","id":"hash-Build-the-DLL-in-Windows-using-VS-Net-2003"},{"depth":2,"value":"Build the DLL in Windows using Microsoft Visual C++","id":"hash-Build-the-DLL-in-Windows-using-Microsoft-Visual-C-"},{"depth":2,"value":"Build the shared library on the Macintosh using Metrowerks CodeWarrior 9 or later","id":"hash-Build-the-shared-library-on-the-Macintosh-using-Metrowerks-CodeWarrior-9-or-later"},{"depth":2,"value":"Build the shared library on the Macintosh using Apple Xcode 1.5 or later","id":"hash-Build-the-shared-library-on-the-Macintosh-using-Apple-Xcode-1-5-or-later"},{"depth":2,"value":"Call the computeSum() function from the Insert Horizontal Rule object","id":"hash-Call-the-computeSum-function-from-the-Insert-Horizontal-Rule-object"}],"title":"Dreamweaver 扩展开发： Calling a C++ function from JavaScript","author":"高国良","type":"posts","series":false,"date":"2014-11-07T23:47:00.791Z","tags":["javascript","Dreamweaver","c++"],"description":"After you understand how C-level extensibility works in Dreamweaver and its dependency on certain data types and functions, it's useful to know how to build a library and call a function.","draft":false,"cover":false},"prev":{"title":"Dreamweaver 扩展开发：文档路径等信息的处理","author":"高国良","type":"posts","series":false,"date":1415403120791,"tags":["Dreamweaver"],"description":"//browseFile(fieldToStoreURL){//getFullPath(filePathURL){//getSimpleFileName() {//fixUpPath(docURL,siteURL,savedPath)//fileIsCurrentlyOpen(absoluteFil...","draft":false,"cover":false,"path":"/blogs/2014/ew-ext-file-path-information-processing","slug":"2014/ew-ext-file-path-information-processing"},"next":{"title":"Dreamweaver 扩展开发：C-level extensibility and the JavaScript interpreter","author":"高国良","type":"posts","series":false,"date":1415405400791,"tags":["Dreamweaver","c"],"description":"The C code in your library must interact with the Dreamweaver JavaScript interpreter at the following different times__ERR__At startup, to register the libr...","draft":false,"cover":false,"path":"/blogs/2014/dw-ext-c-level-extensibility-and-the-javascript-interpreter","slug":"2014/dw-ext-c-level-extensibility-and-the-javascript-interpreter"}},"__N_SSG":true}