{"pageProps":{"id":["posts","2014","php-advanced-programming-4-spl-logic-exception"],"post":{"id":["posts","2014","php-advanced-programming-4-spl-logic-exception"],"contentHtml":"<p>SPL 提供了一系列标准异常。日常的使用中我们应该根据需求科学的使用它们，来使我们的程序更加健壮。LogicException 是从 Exception 基类派生的，没有添加任何附加方法。抛出逻辑异常和抛出标准一次的方法类似，区别在于逻辑异常须在应用程序编写有误时才抛出。下面演示下 LogicException 类的使用。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">App</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$_loaded</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$_name</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_loaded</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_name</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'unzin'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_loaded</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LogicException</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Error Processing Request\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$APP</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$APP</span> <span class=\"token operator\">-></span> <span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LogicException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$e</span><span class=\"token operator\">-></span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n","words":480,"toc":[],"title":"PHP 高级编程(4/5) - SPL异常类之 LogicException 逻辑异常","author":"高国良","type":"posts","series":false,"date":"2014-06-16T23:34:00.791Z","tags":["php","Exception"],"description":"SPL 提供了一系列标准异常。日常的使用中我们应该根据需求科学的使用它们，来使我们的程序更加健壮。LogicException 是从 Exception 基类派生的，没有添加任何附加方法。抛出逻辑异常和抛出标准一次的方法类似，区别在于逻辑异常须在应用程序编写有误时才抛出。","draft":false,"cover":false},"prev":{"title":"PHP 高级编程(3/5) - 使用SPL(标准PHP库)实现观察者模式","author":"高国良","type":"posts","series":false,"date":1402869960791,"tags":["php","SPL"],"description":"SPL（标准PHP库 - Standard PHP Library）是 PHP5 面向对象功能中重要的部分。原文解释是这样的“The Standard PHP Library (SPL) is a collection of interfaces and classes that are meant to solve common problems”。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-3-spl-observer-patterns","slug":"2014/php-advanced-programming-3-spl-observer-patterns"},"next":{"title":"PHP 高级编程(5/5) - SPL 数组重载","author":"高国良","type":"posts","series":false,"date":1402966320791,"tags":["php","SPL","array"],"description":"ArrayAccess 接口是对象的行为看起来像个数组，定义了四个方法。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-5-spl-array-overload","slug":"2014/php-advanced-programming-5-spl-array-overload"}},"__N_SSG":true}