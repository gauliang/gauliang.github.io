{"pageProps":{"id":["posts","2014","ew-ext-file-path-information-processing"],"post":{"id":["posts","2014","ew-ext-file-path-information-processing"],"contentHtml":"<div class=\"remark-highlight\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">//browseFile(fieldToStoreURL){</span>\n<span class=\"token comment\">//getFullPath(filePathURL){</span>\n<span class=\"token comment\">//getSimpleFileName() {</span>\n<span class=\"token comment\">//fixUpPath(docURL,siteURL,savedPath)</span>\n<span class=\"token comment\">//fileIsCurrentlyOpen(absoluteFileURL);</span>\n\n\n<span class=\"token comment\">//Invokes dialog to allow user to select filename. Puts value in text input.</span>\n<span class=\"token comment\">// The optional flag stripParameters will remove anything after a question</span>\n<span class=\"token comment\">// mark if it is set to true</span>\n\nfunction <span class=\"token function\">browseFile</span><span class=\"token punctuation\">(</span>fieldToStoreURL<span class=\"token punctuation\">,</span> stripParameters<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  var fileName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  fileName <span class=\"token operator\">=</span> <span class=\"token function\">browseForFileURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//returns a local filename</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stripParameters<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    var index <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      fileName <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span> fieldToStoreURL<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">//function: getFullPath</span>\n<span class=\"token comment\">//description: converts relative paths into full paths that start with</span>\n<span class=\"token comment\">//file:///</span>\n<span class=\"token comment\">//Why this is important: A user is prompted for a location to save</span>\n<span class=\"token comment\">//a file. Dreamweaver generates a path that is relative to the currently</span>\n<span class=\"token comment\">//opened document. If a developer tries to use this URL in DWfile, it will</span>\n<span class=\"token comment\">//not work because dreamweaver assumes the path to be relative to the</span>\n<span class=\"token comment\">//extension file. However, full paths will work</span>\n<span class=\"token comment\">//Note that this function sometimes returns a full path that is indirect:</span>\n<span class=\"token comment\">//For instance: file:///C|/MyWebSite/Hobbies/Cooking/.../Hobbies/Images/cake.gif</span>\n<span class=\"token comment\">//However, the user never sees this file path.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//Arguments:</span>\n<span class=\"token comment\">//filePathURL - doc-relative,site-relative, or absolute file path</span>\n\nfunction <span class=\"token function\">getFullPath</span><span class=\"token punctuation\">(</span>filePathURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   var retVal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>filePathURL<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>filePathURL<span class=\"token operator\">:</span><span class=\"token char\">''</span><span class=\"token punctuation\">;</span>\n   var docURL<span class=\"token punctuation\">;</span>\n   var dotDotSlash<span class=\"token punctuation\">;</span>\n   var inMiddle<span class=\"token punctuation\">;</span>\n \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>retVal <span class=\"token operator\">!=</span> <span class=\"token char\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n     <span class=\"token comment\">//if the document path is relative, for example,My Docs/My Schedule.htm</span>\n     <span class=\"token comment\">//create an absolute path.</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>  filePathURL<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file://\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n     \n       <span class=\"token comment\">//if doc relative...</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> filePathURL<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token string\">\"/\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n         docURL <span class=\"token operator\">=</span> dreamweaver<span class=\"token punctuation\">.</span><span class=\"token function\">getDocumentDOM</span><span class=\"token punctuation\">(</span><span class=\"token char\">'document'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">;</span>\n         dotDotSlash <span class=\"token operator\">=</span> filePathURL<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token char\">'../'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>dotDotSlash <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n           docURL <span class=\"token operator\">=</span> docURL<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>docURL<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           filePathURL <span class=\"token operator\">=</span> filePathURL<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           dotDotSlash <span class=\"token operator\">=</span> filePathURL<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token char\">'../'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span> \n         retVal <span class=\"token operator\">=</span> docURL<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>docURL<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> filePathURL<span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//else path is site relative...</span>\n       <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n         retVal <span class=\"token operator\">=</span> dreamweaver<span class=\"token punctuation\">.</span><span class=\"token function\">getSiteRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> filePathURL<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span> \n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n     <span class=\"token keyword\">return</span> retVal<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">//Returns the simple file name for the current document</span>\n\nfunction <span class=\"token function\">getSimpleFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  var filePath <span class=\"token operator\">=</span> dreamweaver<span class=\"token punctuation\">.</span><span class=\"token function\">getDocumentPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"document\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//get full path of file</span>\n  var lastSlash <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastSlash <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> filePath <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>lastSlash<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> filePath<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// fixUpPath()</span>\n<span class=\"token comment\">// Given the location of the current document, the site root,</span>\n<span class=\"token comment\">// and the path to a file or folder (expressed as a file:// URL),</span>\n<span class=\"token comment\">// returns one of the following:</span>\n<span class=\"token comment\">// the file:// URL passed in, if the document has not been saved</span>\n<span class=\"token comment\">// the file:// URL passed in, if the document is not in the current site</span>\n<span class=\"token comment\">// a document-relative path, if the document has been saved in the current site</span>\nfunction <span class=\"token function\">fixUpPath</span><span class=\"token punctuation\">(</span>docURL<span class=\"token punctuation\">,</span>siteURL<span class=\"token punctuation\">,</span>savedPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   var retVal <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docURL <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>docURL <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">&#x26;&#x26;</span> savedPath<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>dw<span class=\"token punctuation\">.</span><span class=\"token function\">getSiteRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      retVal <span class=\"token operator\">=</span> savedPath<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n     docURL <span class=\"token operator\">=</span> docURL<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>docURL<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token char\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      var endStr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>docURL<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> savedPath<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>savedPath<span class=\"token punctuation\">.</span>length<span class=\"token operator\">:</span>docURL<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n      var commonStr <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>var i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> endStr<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docURL<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> savedPath<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        commonStr <span class=\"token operator\">+=</span> docURL<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    var whatsLeft <span class=\"token operator\">=</span> docURL<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>commonStr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    var slashPos <span class=\"token operator\">=</span> whatsLeft<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token char\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    var slashCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    var dotDotSlash <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>slashPos <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      slashCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      slashPos <span class=\"token operator\">=</span> whatsLeft<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token char\">'/'</span><span class=\"token punctuation\">,</span>slashPos<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n   \n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>var j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&#x3C;=</span> slashCount<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      dotDotSlash <span class=\"token operator\">+=</span> <span class=\"token char\">'../'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    retVal <span class=\"token operator\">=</span> dotDotSlash <span class=\"token operator\">+</span> savedPath<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>commonStr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">return</span> retVal<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// function: fileIsCurrentlyOpen</span>\n<span class=\"token comment\">// description: given a file path, determines if the file is currently open</span>\n<span class=\"token comment\">// argument: absoluteFilePath -- an absolute file path</span>\nfunction <span class=\"token function\">fileIsCurrentlyOpen</span><span class=\"token punctuation\">(</span>absoluteFilePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  var fileObj <span class=\"token operator\">=</span> dw<span class=\"token punctuation\">.</span><span class=\"token function\">getDocumentDOM</span><span class=\"token punctuation\">(</span>absoluteFilePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  var openFilesArr <span class=\"token operator\">=</span> dw<span class=\"token punctuation\">.</span><span class=\"token function\">getDocumentList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  var fileIsOpen <span class=\"token operator\">=</span> false<span class=\"token punctuation\">,</span> nOpenFiles<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">;</span>\n \n  <span class=\"token comment\">// openFilesArr is an array of currently open document objects</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openFilesArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&#x26;&#x26;</span> openFilesArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    nOpenFiles <span class=\"token operator\">=</span> openFilesArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&#x3C;</span>nOpenFiles<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileObj <span class=\"token operator\">==</span> openFilesArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        fileIsOpen <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n \n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> fileIsOpen<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>原址：<a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"http://www.delphipraxis.net/332540-post7.html\">http://www.delphipraxis.net/332540-post7.html</a></p>\n","words":3781,"toc":[],"title":"Dreamweaver 扩展开发：文档路径等信息的处理","author":"高国良","type":"posts","series":false,"date":"2014-11-07T23:32:00.791Z","tags":["Dreamweaver"],"description":"//browseFile(fieldToStoreURL){//getFullPath(filePathURL){//getSimpleFileName() {//fixUpPath(docURL,siteURL,savedPath)//fileIsCurrentlyOpen(absoluteFil...","draft":false,"cover":false},"prev":{"title":"SFTP 命令列表以备查询","author":"高国良","type":"posts","series":false,"date":1409008260791,"tags":["sftp"],"description":"Available commands","draft":false,"cover":false,"path":"/blogs/2014/sftp-commands","slug":"2014/sftp-commands"},"next":{"title":"Dreamweaver 扩展开发： Calling a C++ function from JavaScript","author":"高国良","type":"posts","series":false,"date":1415404020791,"tags":["javascript","Dreamweaver","c++"],"description":"After you understand how C-level extensibility works in Dreamweaver and its dependency on certain data types and functions, it's useful to know how to build a library and call a function.","draft":false,"cover":false,"path":"/blogs/2014/dw-ext-calling-c-function-javascript","slug":"2014/dw-ext-calling-c-function-javascript"}},"__N_SSG":true}