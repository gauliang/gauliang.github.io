{"pageProps":{"id":["posts","2018","docker-and-fe-2-docker-installation"],"post":{"id":["posts","2018","docker-and-fe-2-docker-installation"],"contentHtml":"<p>Docker 是一个开源的容器引擎，可以方便的对容器进行管理。作为一种新兴的虚拟化方式，跟传统的虚拟化方式相比具有众多优势。《Docker 遇见前端》系列文章，旨在记录如何通过 docker 构建一个相对完备的前端自动化开发环境。过程中也会分享一些 linux 平台下的基础知识，希望能为刚刚将开发环境迁移至 linux 的同学提供一点帮助。能力所限，文中难免会出现不准确/不妥/甚至错误的表述，还请大家及时予以指正，我会第一时间进行修正。</p>\n<h2 id=\"hash-Windows-系统\">Windows 系统</h2>\n<p>windows10 操作系统自带 <code>windows hyper-v</code> 可以非常方便的运行 Docker。 在 windows7 系统上则稍微复杂一点，需通过安装 Docker-Toolbox 来使用 Docker（用 Oracle virtualbox 来取代 <code>Hyper-V</code>）。</p>\n<ul>\n<li>windows 10 安装 <a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe\">Docker for Windows Installer</a></li>\n<li>windows 7 安装  <a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://docs.docker.com/toolbox/overview/\">Docker Toolbox</a></li>\n</ul>\n<p>安装后，Docker 不会自动启动，要启动它请从开始菜单打开 Docker for Winodws。window7 打开 Kitematic。Kitematic 并提供直观的图形用户界面（GUI）来运行Docker容器。</p>\n<p>虽然在 windows7 平台通过 DockerToolbox 可以正常运行 Docker，但使用体验一般，强烈建议迁移到 Linux 平台，debian / ubuntu / fedora 等都是不错的选择。</p>\n<h2 id=\"hash-Linux-系统\">Linux 系统</h2>\n<p>这里以 Fedora 为例（当前最新版本为 Fedora28），简要整理一下安装过程，其他环境大同小异。</p>\n<h3 id=\"hash-卸载旧版本\">卸载旧版本</h3>\n<p>如果存在旧版本的 docker 则将其卸载，不存在可忽略此步骤。</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> dnf remove <span class=\"token function\">docker</span> <span class=\"token punctuation\">\\</span>\n                  docker-client <span class=\"token punctuation\">\\</span>\n                  docker-client-latest <span class=\"token punctuation\">\\</span>\n                  docker-common <span class=\"token punctuation\">\\</span>\n                  docker-latest <span class=\"token punctuation\">\\</span>\n                  docker-latest-logrotate <span class=\"token punctuation\">\\</span>\n                  docker-logrotate <span class=\"token punctuation\">\\</span>\n                  docker-selinux <span class=\"token punctuation\">\\</span>\n                  docker-engine-selinux <span class=\"token punctuation\">\\</span>\n                  docker-engine\n</code></pre></div>\n<h3 id=\"hash-安装-Docker-CE\">安装 Docker CE</h3>\n<ol>\n<li>安装dnf-plugins-core包，该包提供从命令行管理DNF存储库的命令。</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> dnf -y <span class=\"token function\">install</span> dnf-plugins-core\n</code></pre></div>\n<ol start=\"2\">\n<li>设置存储库</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> dnf config-manager <span class=\"token punctuation\">\\</span>\n    --add-repo <span class=\"token punctuation\">\\</span>\n    https://download.docker.com/linux/fedora/docker-ce.repo\n</code></pre></div>\n<ol start=\"3\">\n<li>安装 Docker CE</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> docker-ce\n</code></pre></div>\n<ol start=\"4\">\n<li>启动 Docker</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> systemctl start <span class=\"token function\">docker</span>\n</code></pre></div>\n<ol start=\"5\">\n<li>设置开机启动</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ sddo systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token function\">docker</span>\n</code></pre></div>\n<ol start=\"7\">\n<li>更新用户组</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG <span class=\"token function\">docker</span> <span class=\"token environment constant\">$USER</span>\n</code></pre></div>\n<p>注销并重新登陆后即可直接运行 <code>docker</code> 命令，而不用添加 <code>sudo</code> 前缀。</p>\n<h2 id=\"hash-测试安装是否成功\">测试安装是否成功</h2>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run hello-world\n</code></pre></div>\n<p>此命令下载测试映像并在容器中运行它。当容器运行时，它会打印一条信息性消息并退出。</p>\n<h2 id=\"hash-卸载-Docker-CE\">卸载 Docker CE</h2>\n<ol>\n<li>卸载 Docker CE</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> dnf remove docker-ce\n</code></pre></div>\n<ol>\n<li>删除镜像和容器</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /var/lib/docker\n</code></pre></div>\n","words":1616,"toc":[{"depth":2,"value":"Windows 系统","id":"hash-Windows-系统"},{"depth":2,"value":"Linux 系统","id":"hash-Linux-系统"},{"depth":2,"value":"测试安装是否成功","id":"hash-测试安装是否成功"},{"depth":2,"value":"卸载 Docker CE","id":"hash-卸载-Docker-CE"}],"title":"Docker 安装 - Docker 与前端（一）","author":"高国良","type":"posts","series":false,"date":"2018-08-07T17:35:00.791Z","tags":["linux","docker"],"description":"Docker 作为一种新兴的虚拟化方式，跟传统的虚拟化方式相比具有众多优势。《Docker 与前端》系列文章，旨在记录如何通过 docker 构建一个相对完备的前端自动化开发环境。","draft":false,"cover":false},"prev":{"title":"Post-installation steps for Chromium | Fedora","author":"高国良","type":"posts","series":false,"date":1533398160791,"tags":["chromium","linux","chrome"],"description":"Flash 插件安装 网址： https__ERR__//fedora.pkgs.org/ 下载： chromium pepper flash version.fc28.x86_64.rpm 安装后重启浏览器 解码 H264 视频 CHROMIUM 已移除对 的支持，如果要在浏览器中播放 mp4 格式视频，可通","draft":false,"cover":false,"path":"/blogs/2018/post-installation-steps-for-chromium-and-fedora","slug":"2018/post-installation-steps-for-chromium-and-fedora"},"next":{"title":"Docker 基础 -  Docker 与前端（二）","author":"高国良","type":"posts","series":false,"date":1536620580791,"tags":["docker","linux"],"description":"Docker 相关的基础知识点非常多，比如基本概念，镜像管理，数据卷（容器）管理，常用命令，周边生态等等。在这里梳理出个大概框架，方便后续学习使用。《Docker 与前端》系列文章，旨在分享学习如何通过 docker 构建一个相对完备的前端自动化开发环境。","draft":false,"cover":false,"path":"/blogs/2018/docker-and-fe-2-docker-overview","slug":"2018/docker-and-fe-2-docker-overview"}},"__N_SSG":true}