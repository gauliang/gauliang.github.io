{"pageProps":{"id":["posts","2014","php-mvc-architecture"],"post":{"id":["posts","2014","php-mvc-architecture"],"contentHtml":"<p>PHP高级程序设计 学习笔记 2014.06.18</p>\n<p>MVC (Model-View-Controller,模型-视图-控制器)是一种可以简化应用程序开发和维护的非常常用的设计模式。它从逻辑上把应用程序分隔为个部分。模型部分负责应用程序的业务逻辑，封装访问数据库的方法并提供一个可以重用的类库。视图部分控制了数据的外观并提供从用户收集数据的机制。控制器部分，负责将所有的事项连接起来，负责从视图收集数据，并决定程序的执行逻辑。调用模型的机制并解析返回的数据，然后将数据提交给视图展示给客户。选择合适的框架要考虑五个关机因素：架构、文档、社区、支持和灵活性。</p>\n<h2 id=\"hash-基于-MVC-的典型工作流\">基于 MVC 的典型工作流</h2>\n<p>设计师根据现存的业务需求以及应用程序所要实现的功能，制作一个静态的、单独的原型设计。然后，交由开发人员评审。开发人员负责确保所有要求实现的功能均是可行的，如果开发人员没有发现任何问题，他们就会创建一个开发计划，其中包括API模型，然后再交由集成人员（负责控制器层）。如果原型出现问题，项目会回到设计人员手中，继续循环前面的流程。</p>\n<p>准备好原型和API模型后，集成工作就会开始。集成人员将研究原型设计，并将它转换成模板语言，并将设计集成到站点URL结构中。然后编写控制器，这一组件会将请求在WEB服务器和他们需要操纵的模型信息之间代理分发。结果产生之后，获取视图并输出，并且控制器会提供所有动态内容的数据。</p>\n<p>最后，API模型完全实现之后，就可以将应用程序交给测试人员了。如果模型开发人员严格遵守API编写代码，集成人员根据规范来编写控制器，那么测试工作将会顺利进行。</p>\n<h2 id=\"hash-MVC-应用程序\">MVC 应用程序</h2>\n<p>应用程序入口，MVC站点通常会实现一个用来处理WEB站点上所以请求的核心脚本。这个文件被称为引导文件。引导文件负责初始化框架，其中包括类的自动加载，读取配置，解析URL到模型，填充封装了请求信息，初始化控制器程序等操作。</p>\n<p>引导完成后，前端控制器将被实例化，并接管程序的运行。前端控制器类是负责解释请求变量的内置类，它把用户端请求路由到动作控制器上的某个方法，这个方法被叫做动作，动作负责实现所有的功能。这个方法中将实例化模型类，解析视图模板，并输出结果。</p>\n<p>模型一般不遵循任何特定的结构，而是存在与一个公共的位置中，所有它们可能被框架自动加载。模型是提供了所需的数据操作和解析能力的工具类。</p>\n<p>视图是模板，可以用任何模板语言来编写。视图的目的是不在视图中包含任何类型的处理逻辑或者数据操作，并且只输出由控制器提供的数据。模板语言(如：FastTemplate/Smarty)的选择取决于能否和目标框架集成在一起。</p>\n","words":1075,"toc":[{"depth":2,"value":"基于 MVC 的典型工作流","id":"hash-基于-MVC-的典型工作流"},{"depth":2,"value":"MVC 应用程序","id":"hash-MVC-应用程序"}],"title":"PHP MVC 架构","author":"高国良","type":"posts","series":false,"date":"2014-06-18T23:53:00.791Z","tags":["reflection","MVC"],"description":"MVC (Model-View-Controller,模型-视图-控制器)是一种可以简化应用程序开发和维护的非常常用的设计模式。它从逻辑上把应用程序分隔为个部分。","draft":false,"cover":false},"prev":{"title":"PHP 高级编程(5/5) - SPL 数组重载","author":"高国良","type":"posts","series":false,"date":1402966320791,"tags":["php","SPL","array"],"description":"ArrayAccess 接口是对象的行为看起来像个数组，定义了四个方法。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-5-spl-array-overload","slug":"2014/php-advanced-programming-5-spl-array-overload"},"next":{"title":"Laravel - 安装与配置","author":"高国良","type":"posts","series":false,"date":1403525220791,"tags":["php","laravel"],"description":"有多重途径可以安装 Laravel，下面是通过 Composer 安装 Laravel 的方法。Composer 是 PHP 的一个依赖管理工具。它允许你申明项目所依赖的代码库，它会在你的项目中为你安装他们。","draft":false,"cover":false,"path":"/blogs/2014/laravel-install","slug":"2014/laravel-install"}},"__N_SSG":true}