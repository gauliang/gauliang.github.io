{"pageProps":{"post":{"id":["ssg-ssr"],"contentHtml":"<p>We recommend using <strong>Static Generation</strong> (with and without data) whenever possible because your page can be built once and served by CDN, which makes it much faster than having a server render the page on every request.</p>\n<p>You can use Static Generation for many types of pages, including:</p>\n<ul>\n<li>Marketing pages</li>\n<li>Blog posts</li>\n<li>E-commerce product listings</li>\n<li>Help and documentation</li>\n</ul>\n<p>You should ask yourself: \"Can I pre-render this page <strong>ahead</strong> of a user's request?\" If the answer is yes, then you should choose Static Generation.</p>\n<p>On the other hand, Static Generation is <strong>not</strong> a good idea if you cannot pre-render a page ahead of a user's request. Maybe your page shows frequently updated data, and the page content changes on every request.</p>\n<p>In that case, you can use <strong>Server-Side Rendering</strong>. It will be slower, but the pre-rendered page will always be up-to-date. Or you can skip pre-rendering and use client-side JavaScript to populate data.</p>\n","toc":[],"title":"When to Use Static Generation v.s. Server-side Rendering","date":"2020-01-02"},"prev":{"title":"Two Forms of Pre-endering","date":1577836800000,"slug":"2022/hello"},"next":{"title":"微服务 API 网关 KrakenD","date":1578727693000,"draft":false,"description":"KrakenD 是一个高性能无状态、分布式、微服务 API 网关，其不仅可以轻松将客户端请求转发到后端服务，还具备强大的数据处理功能，支持转换、聚合和修剪来自后端服务甚至第三方服务的返回数据，从而消除处理多个 REST 服务的必要性，使客户端与微服务的实现细节隔离开来。这一切通过简单的配置即可实现，本文介绍 KrakendD 如何安装部署并快速投入应用。","type":"posts","tags":["service-mesh","krakend","api-getway"],"series":[],"author":"Gl","cover":false,"slug":"2020/microservice-api-gateway-krakend"}},"__N_SSG":true}