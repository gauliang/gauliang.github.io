{"pageProps":{"id":["posts","2018","flex-layout-overview"],"post":{"id":["posts","2018","flex-layout-overview"],"contentHtml":"<p>传统的布局方案，在针对特殊布局时会很不方便，比如垂直居中，把一个容器等分为 N 列等等。自从 Flex 出现以后，这些都迎刃而解了。</p>\n<h2 id=\"hash-什么是-Flex\">什么是 Flex</h2>\n<p>Flex 是 Flexible Box 的缩写，意为”弹性布局”，任何一个容器都可以指定为 Flex 布局。设为 Flex 布局以后，子元素的 <code>float</code>、<code>clear</code> 和 <code>vertical-align</code> 属性将失效。要设置一个元素采用 flex 布局，只需设置器 <code>display:flex</code> 即可。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.flex-box</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span>flex<span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* or inline-flex*/</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2 id=\"hash-常用术语\">常用术语</h2>\n<p>采用 Flex 布局的元素，称为 Flex 容器。其子元素为 <strong>flex item</strong>，本文称其为”项目”。容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。</p>\n<ol>\n<li>flex container : Flex容器，简称 <strong>容器</strong></li>\n<li>flex item : Flex容器的子元素，可称其为 flex 项目，简称 <strong>项目</strong></li>\n<li>main axis : 主轴， 水平轴，起始位置称为 <code>main start</code>，结束位置称为 <code>main end</code></li>\n<li>cross axis: 交叉轴， 垂直轴，开始位置叫做 <code>cross start</code>，结束位置叫做 <code>cross end</code></li>\n</ol>\n<p>项目默认沿 main axis 排列，单个项目占据的主轴空间叫做 main size，占据的交叉轴空间叫做 cross size。</p>\n<h2 id=\"hash-容器的属性\">容器的属性</h2>\n<ol>\n<li>flex-direction :决定主轴的方向（即项目的排列方向）。\n<ul>\n<li>row（默认值）：主轴为水平方向，起点在左端。</li>\n<li>row-reverse：主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n</li>\n<li>flex-wrap: 默认情况下，项目都排在一条线（又称”轴线”）上。f<code>lex-wrap</code> 属性定义，如果一条轴线排不下，如何换行。\n<ul>\n<li>nowrap（默认）：不换行。</li>\n<li>wrap：换行，第一行在上方。</li>\n<li>wrap-reverse：换行，第一行在下方。</li>\n</ul>\n</li>\n<li>flex-flow : <code>flex-direction</code> 属性和 <code>flex-wrap</code> 属性的简写形式，默认值为 <code>row nowrap</code>。\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.box</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> &#x3C;flex-direction> || &#x3C;flex-wrap><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>justify-content: 定义了项目在主轴上的对齐方式。</li>\n<li>align-items: 定义项目在交叉轴上如何对齐。</li>\n<li>align-content: 定义多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</li>\n</ol>\n<h2 id=\"hash-项目的属性\">项目的属性</h2>\n<ol>\n<li>order 定义项目的排列顺序，数值越小越靠前</li>\n<li>flex-grow 定义项目的放大比例</li>\n<li>flex-shrink 定义项目的缩小比例</li>\n<li>flex-basis 定义在分配多余空间之前，项目占据的主轴空间</li>\n<li>flex 是 grow shrink basis 的简写。取值 <code> none | [ &#x3C;'flex-grow'> &#x3C;'flex-shrink'>? || &#x3C;'flex-basis'> ]</code></li>\n<li>align-self 定义当前项目的对其方式。取值 <code>auto | flex-start | flex-end | center | baseline | stretch</code></li>\n</ol>\n","words":1356,"toc":[{"depth":2,"value":"什么是 Flex","id":"hash-什么是-Flex"},{"depth":2,"value":"常用术语","id":"hash-常用术语"},{"depth":2,"value":"容器的属性","id":"hash-容器的属性"},{"depth":2,"value":"项目的属性","id":"hash-项目的属性"}],"title":"Flex 布局知识点梳理","author":"高国良","type":"posts","series":false,"date":"2018-07-29T12:48:00.791Z","tags":["css","layout"],"description":"传统的布局方案，在针对特殊布局时会很不方便，比如垂直居中，把一个容器等分为 N 列等等。自从 Flex 出现以后，这些都迎刃而解了。","draft":false,"cover":false},"prev":{"title":"常用数学术语中英文表达对照","author":"高国良","type":"posts","series":false,"date":1532608560791,"tags":["math"],"description":"整理和收集常用数学术语的中英文表达对照信息。","draft":false,"cover":false,"path":"/blogs/2018/mathematical-terminology","slug":"2018/mathematical-terminology"},"next":{"title":"Decentraleyes - Local emulation of Content Delivery Networks","author":"高国良","type":"posts","series":false,"date":1533335760791,"tags":["chrome"],"description":"Decentraleyes, 是一个本地化第三方库文件的浏览器插件，可以保存常用的第三方库文件到本地，当打开的页面中需要加载的第三方库文件在本地有副本时，随即进行拦截，并直接从本地加载。","draft":false,"cover":false,"path":"/blogs/2018/decentraleyes-local-emulation-of-content-delivery-networks","slug":"2018/decentraleyes-local-emulation-of-content-delivery-networks"}},"__N_SSG":true}