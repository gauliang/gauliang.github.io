{"pageProps":{"tag":"commonjs","total":2,"posts":[{"title":"CommonJS Modules","date":1599358780000,"draft":false,"description":"在 ES2015 标准之前，JavaScript语言没有模块化组织代码的原生方法，CommonJS 模块格式填补了这一空白。 CommonJS 规范了如何编写模块，以及如何在模块系统之间实现互操作。由于其同步执行特性，CMD 主要用于服务端开发，也可通过打包工具处理后用在浏览器端。","type":"posts","tags":["javascript","node.js","commonjs"],"series":false,"author":"GauLiang","cover":"001.jpg","path":"/blogs/2020/commonJS-modules","slug":"2020/commonJS-modules"},{"title":"Javascript 模块化概述","date":1599293077000,"draft":false,"description":"当我们提及模块化时，通常意味着是由一组高度分离的，不同的功能块存储在模块中组成的。在可能的情况下，通过松散耦合消除依赖关系简化应用程序的可维护性。","type":"posts","tags":["javascript","node.js","CommonJS","esm","amd","umd"],"series":false,"author":"GauLiang","cover":"001.jpg","path":"/blogs/2020/what-are-cjs-amd-umd-and-esm-in-javascript","slug":"2020/what-are-cjs-amd-umd-and-esm-in-javascript"}]},"__N_SSG":true}