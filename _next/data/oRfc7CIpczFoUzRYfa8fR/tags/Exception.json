{"pageProps":{"tag":"Exception","total":2,"posts":[{"title":"PHP 高级编程(4/5) - SPL异常类之 LogicException 逻辑异常","author":"高国良","type":"posts","series":false,"date":1402961640791,"tags":["php","Exception"],"description":"SPL 提供了一系列标准异常。日常的使用中我们应该根据需求科学的使用它们，来使我们的程序更加健壮。LogicException 是从 Exception 基类派生的，没有添加任何附加方法。抛出逻辑异常和抛出标准一次的方法类似，区别在于逻辑异常须在应用程序编写有误时才抛出。","draft":false,"cover":false,"path":"/blogs/2014/php-advanced-programming-4-spl-logic-exception","slug":"2014/php-advanced-programming-4-spl-logic-exception"},{"title":"PHP 面向对象编程和设计模式 (4/5) - 异常的定义、扩展及捕获","author":"高国良","type":"posts","series":false,"date":1402536000791,"tags":["php","Exception"],"description":"PHP5 增加了类似其他语言的异常处理模块。在PHP代码中所产生的异常可被 throw 语句抛出并被 catch 语句捕获。需要进行异常处理的代码都必须放入到 try 代码���内，以便捕获可能存在的异常。每个try至少对应一个 catch 块。使用多个 catch 可以捕获不同的类所产生的异常。","draft":false,"cover":false,"path":"/blogs/2014/php-oop-and-design-pattern-4-exception","slug":"2014/php-oop-and-design-pattern-4-exception"}]},"__N_SSG":true}