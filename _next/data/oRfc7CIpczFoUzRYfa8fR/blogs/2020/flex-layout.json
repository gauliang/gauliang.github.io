{"pageProps":{"id":["posts","2020","flex-layout"],"post":{"id":["posts","2020","flex-layout"],"contentHtml":"<div class=\"image-widget\"><img src=\"/attachments/posts/2020/flex-layout.files/cover.jpg\" alt=\"\"></div>\n<p>弹性布局的核心思想，是对容器及其内部元素进行排版，并控制子元素以合适的方式填充可用空间。\n在弹性布局模型中，弹性容器的子元素可以在任何方向上排布，也可以“弹性伸缩”其尺寸，既可以增加尺寸以填满未使用的空间，也可以收缩尺寸以避免父元素溢出。\n子元素的水平对齐和垂直对齐都能很方便的进行操控。通过嵌套这些框可以在两个维度上构建布局。</p>\n<h2 id=\"hash-Concepts\">Concepts</h2>\n<div class=\"image-widget\"><img src=\"/attachments/posts/2020/flex-layout.files/00-basic-terminology.svg\" alt=\"Flexbox 模型\"><div class=\"figcaption\">Flexbox 模型</div></div>\n<p><strong>Flex 容器</strong> 文档中采用了 flexbox 的区域就叫做 flex 容器。把一个容器的 display 属性值改为 <code>flex</code> 或者 <code>inline-flex</code> 即可创建一个 flex 容器。</p>\n<p>Flex 模型包含主轴和交叉轴两根轴线，其内部元素将沿着主轴或者交叉轴对齐进行对其。flexbox 的所有属性都跟这两根轴线有关。</p>\n<ul>\n<li><strong>main axis</strong> —— 主轴，受 flex 容器属性 flex-direction 的影响，取值 <code>row</code>,<code>row-reverse</code> 主轴将沿着水平方向延伸；\n取值 <code>column</code>,<code>column-reverse</code>，则主轴将沿着上下方向延伸。</li>\n<li><strong>main-start | main-end</strong> —— <strong>flex-item</strong> 在容器内的流动方向是从 <code>main-start</code> 到 <code>main-end</code>。\n需要注意，如果 <strong>flex-direction</strong> 是 <code>row</code>，则起始点和终止点不一定总是左边和右边，这还取决于文字书写方向，当处于从右到左的书写环境时，则起始点在右边而终止点在左边。</li>\n<li><strong>cross axis</strong> —— 交叉轴，始终垂直于 <strong>main axis</strong>。</li>\n<li><strong>cross-start|cross-end</strong> —— <strong>flex-lines</strong> 在容器内的流动方向是从 <code>cross-start</code> 到 <code>cross-end</code>。</li>\n</ul>\n<div class=\"image-widget\"><img src=\"/attachments/posts/2020/flex-layout.files/container.jpg\" alt=\"Flexbox 模型\"><div class=\"figcaption\">Flexbox 模型</div></div>\n<h2 id=\"hash-align-content\">align-content</h2>\n<p>当在多行内容场景下，定义行在交叉轴上的对齐方式。仅在多行时有效。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span>     <span class=\"token comment\">/*默认值*/</span>\n<span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> flex-start<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> flex-end<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> space-around<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-align-items\">align-items</h2>\n<p>定义Flexbox的 item 如何在交叉轴上对齐。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> flex-start<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> flex-end<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> baseline<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-align-self\">align-self</h2>\n<p>其特性与 <code>align-items</code> 相同，其区别在于，仅应用与单个 item 中。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/*默认值*/</span>\n<span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span> flex-start<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span> flex-end<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span> baseline<span class=\"token punctuation\">;</span>\n<span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-flex-basis\">flex-basis</h2>\n<p>定义 flex 元素的初始大小。如果不使用 box-sizing 改变盒模型的话，那么这个属性就决定了 flex 元素的内容盒（content-box）的尺寸。\n当一个元素同时被设置了 flex-basis (除值为 auto 外) 和 width (或者在 flex-direction: column 情况下设置了height) , flex-basis 具有更高的优先级。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/*默认值*/</span>\n<span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-flex-direction\">flex-direction</h2>\n<p>指定内部元素是如何在 flex 容器中布局，定义主轴的方向。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> row<span class=\"token punctuation\">;</span>        <span class=\"token comment\">/*默认值*/</span>\n<span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> row-reverse<span class=\"token punctuation\">;</span>\n<span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span>\n<span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column-reverse<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-flex-flow\">flex-flow</h2>\n<p>该属性是 <code>flex-direction</code> 和 <code>flex-wrap</code> 的简写模式。</p>\n<h2 id=\"hash-flex-grow\">flex-grow</h2>\n<p>设置一个 flex 项的增长系数，如果有可用空间，将按该系数分配空间。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">/*默认值*/</span>\n</code></pre></div>\n<h2 id=\"hash-flex-shrink\">flex-shrink</h2>\n<p>设置一个 flex 项的压缩系数，如果没有可用空间，将按该系数对其压缩。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n</code></pre></div>\n<h2 id=\"hash-flex-wrap\">flex-wrap</h2>\n<p>指定 flex 元素单行显示还是多行显示 。如果允许换行，这个属性允许你控制行的堆叠方向。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/*默认值*/</span>\n<span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span>\n<span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap-reverse<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-justify-content\">justify-content</h2>\n<p>定义 item 如何在主轴上对齐。</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> flex-start<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/*默认值*/</span>\n<span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> flex-end<span class=\"token punctuation\">;</span>\n<span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span>\n<span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-around<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"hash-order\">order</h2>\n<p>指定 flex item 在列表中的顺序</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">/*默认值*/</span>\n</code></pre></div>\n<h2 id=\"hash-参考\">参考</h2>\n<ol>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">https://css-tricks.com/snippets/css/a-guide-to-flexbox/</a></li>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://cssreference.io/flexbox/\">https://cssreference.io/flexbox/</a></li>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox</a></li>\n<li><a target=\"_blank\" target=\"_blank\" class=\"ext-link\" href=\"https://css-tricks.com/almanac/properties/f/flex/\">https://css-tricks.com/almanac/properties/f/flex/</a></li>\n</ol>\n","words":2530,"toc":[{"depth":2,"value":"Concepts","id":"hash-Concepts"},{"depth":2,"value":"align-content","id":"hash-align-content"},{"depth":2,"value":"align-items","id":"hash-align-items"},{"depth":2,"value":"align-self","id":"hash-align-self"},{"depth":2,"value":"flex-basis","id":"hash-flex-basis"},{"depth":2,"value":"flex-direction","id":"hash-flex-direction"},{"depth":2,"value":"flex-flow","id":"hash-flex-flow"},{"depth":2,"value":"flex-grow","id":"hash-flex-grow"},{"depth":2,"value":"flex-shrink","id":"hash-flex-shrink"},{"depth":2,"value":"flex-wrap","id":"hash-flex-wrap"},{"depth":2,"value":"justify-content","id":"hash-justify-content"},{"depth":2,"value":"order","id":"hash-order"},{"depth":2,"value":"参考","id":"hash-参考"}],"title":"深入 Flexbox Layout","date":"2020-10-25T08:06:20.000Z","draft":false,"description":"在 CSS3 中加入了 Flex 布局能力，使得实现弹性布局变得轻而易举，本文将全面深入介绍 flex 在的布局中的使用。","type":"posts","tags":["css","layout"],"series":false,"author":"Gl","cover":"cover.jpg"},"prev":{"title":"Javascript Closure","date":1602413155000,"draft":false,"description":"函数和与其相关的词法环境（lexical environment）一起构成闭包（closure）。闭包可以让你从内部函数访问外部函数作用域，在 JavaScript 中，每当函数被创建，就会在函数生成时生成闭包。","type":"posts","tags":["closure","lexical-environment","javascript","node.js","Closure"],"series":false,"author":"Gl","cover":"cover.jpg","path":"/blogs/2020/javascript-closure","slug":"2020/javascript-closure"},"next":{"title":"深入 Webpack","date":1604536490000,"draft":false,"description":"大多数情况下，网站不再只是用带有一些可选 JavaScript 的纯 HTML 编写，它们通常完全由 JavaScript 构建。因此，我们必须将代码打包，最小化和翻译成所有浏览器都能理解的东西，这就是webpack的用武之地。","type":"posts","tags":["webpack","devops","node.js","esm"],"series":false,"author":"Gl","cover":"webpack.jpg","path":"/blogs/2020/dive-into-webpack","slug":"2020/dive-into-webpack"}},"__N_SSG":true}